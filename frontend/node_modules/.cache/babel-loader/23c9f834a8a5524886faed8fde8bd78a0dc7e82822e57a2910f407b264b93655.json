{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  // general variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // function display variables\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 500;\n  const height = 500;\n\n  // retrieve the calculated points from the backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // soon to be deprecated handles rotations manually with button clicks\n  const handleClick = e => {\n    if (points.length > 0) {\n      const typeOfRot = e.target.value;\n      if (typeOfRot === \"x\") {\n        setPoints(handleRotations(.12, 0, 0, points));\n        updateAxes(.12, 0, 0);\n      } else if (typeOfRot === \"y\") {\n        setPoints(handleRotations(0, .12, 0, points));\n        updateAxes(0, .12, 0);\n      } else {\n        setPoints(handleRotations(0, 0, .12, points));\n        updateAxes(0, 0, .12);\n      }\n    }\n  };\n\n  // allows for scroll to zoom in or out\n  const handleWheel = e => {\n    const {\n      deltaY\n    } = e;\n    const newScale = deltaY > 0 ? scale - 0.075 * Math.abs(deltaY) : scale + 0.075 * Math.abs(deltaY);\n    if (newScale > 1) {\n      setScale(newScale);\n    } else {\n      setScale(1);\n    }\n  };\n\n  // point rotation calculations in the frontend\n  const handleRotations = (xRot, yRot, zRot, points, zMoving) => {\n    const Rx = [[1, 0, 0], [0, Math.cos(xRot), -Math.sin(xRot)], [0, Math.sin(xRot), Math.cos(xRot)]];\n    const Ry = [[Math.cos(yRot), 0, Math.sin(yRot)], [0, 1, 0], [-Math.sin(yRot), 0, Math.cos(yRot)]];\n    const Rz = [[Math.cos(zRot), -Math.sin(zRot), 0], [Math.sin(zRot), Math.cos(zRot), 0], [0, 0, 1]];\n\n    // Rotate all the points\n    const rotatedPoints = points.map(point => {\n      const [x, y, z] = point;\n      const vector = [x, y, z];\n      const zRotatedVector = [0, 0, 0];\n      const zyRotatedVector = [0, 0, 0];\n      const zyxRotatedVector = [0, 0, 0];\n\n      // Apply the x, y, and z rotations\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          zRotatedVector[i] += Rx[i][j] * vector[j];\n        }\n      }\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          zyRotatedVector[i] += Ry[i][j] * zRotatedVector[j];\n        }\n      }\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          zyxRotatedVector[i] += Rz[i][j] * zyRotatedVector[j];\n        }\n      }\n      return zyxRotatedVector;\n    });\n    return rotatedPoints;\n  };\n\n  // starts coordinate capture on mouse down\n  const handleMouseDown = e => {\n    console.log(\"Mouse down: \", e.clientX, e.clientY);\n    setDragging(true);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n  let animationFrame;\n  const handleMouseMove = e => {\n    if (dragging) {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      animationFrame = requestAnimationFrame(() => {\n        const coordDiff = [safeCoordDiff(e.clientX - currentCoords[0], 0.1),\n        // Horizontal movement\n        safeCoordDiff(e.clientY - currentCoords[1], 0.1) // Vertical movement\n        ];\n        let rotationZ = 0;\n        let rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n        // let rotationY = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        let rotationY = 0;\n        if (JSON.stringify(zAxis) === JSON.stringify([[0, 0, 3.5], [0, 0, -3.5]])) {\n          rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n          rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n          rotationY = 0;\n          // Update points and axes\n          setPoints(handleRotations(-rotationX, -rotationY, -rotationZ, points));\n          updateAxes(-rotationX, -rotationY, -rotationZ);\n        }\n\n        // Update points and axes\n        setPoints(handleRotations(-rotationX, -rotationY, -rotationZ, points));\n        updateAxes(-rotationX, -rotationY, -rotationZ);\n\n        // Update current coordinates\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  };\n  const handleMouseUp = e => {\n    console.log(\"Mouse up: \", e.clientX, e.clientY);\n    setDragging(false);\n  };\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n    if (denominator <= 0.2) {\n      return 0;\n    }\n    return 1.5 * (1 / denominator);\n  };\n\n  // soon to be removed axis rotation\n  // const updateAxesOld = (typeOfRot) => {\n  //   axios.post('http://localhost:8000/rotate_points', {\n  //     type: typeOfRot,\n  //     newPoints: xAxis,\n  //     theta: .2,\n  //   }).then((response) => {\n  //     setXAxis(response.data.rotatedPoints);\n  //   });\n\n  //   axios.post('http://localhost:8000/rotate_points', {\n  //     type: typeOfRot,\n  //     newPoints: yAxis,\n  //     theta: .2,\n  //   }).then((response) => {\n  //     setYAxis(response.data.rotatedPoints);\n  //   });\n\n  //   axios.post('http://localhost:8000/rotate_points', {\n  //     type: typeOfRot,\n  //     newPoints: zAxis,\n  //     theta: .2,\n  //   }).then((response) => {\n  //     setZAxis(response.data.rotatedPoints);\n  //   });\n  // };\n\n  const updateAxes = (xRot, yRot, zRot) => {\n    // Apply rotation around updated X-axis\n    const xRotationMatrix = createRotationMatrix([xAxis[1][0] - xAxis[0][0], xAxis[1][1]], xRot);\n\n    // Apply rotation around updated Y-axis\n    const yRotationMatrix = createRotationMatrix([yAxis[1][0] - yAxis[0][0], yAxis[1][1]], yRot);\n\n    // Apply rotation around updated Z-axis\n    const zRotationMatrix = createRotationMatrix([zAxis[1][0] - zAxis[0][0], zAxis[1][1] - zAxis[0][1], zAxis[1][2] - zAxis[0][2]], zRot);\n\n    // Function to rotate points using a matrix\n    const rotatePointsWithMatrix = (points, matrix) => points.map(point => {\n      const [x, y, z] = point;\n      return [matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z, matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z, matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z];\n    });\n\n    // Update axes and points\n    setXAxis(rotatePointsWithMatrix(xAxis, xRotationMatrix));\n    setYAxis(rotatePointsWithMatrix(yAxis, yRotationMatrix));\n    setZAxis(rotatePointsWithMatrix(zAxis, zRotationMatrix));\n  };\n  const createRotationMatrix = (axis, theta) => {\n    const [uX, uY, uZ] = axis;\n    const cosT = Math.cos(theta);\n    const sinT = Math.sin(theta);\n    const oneMinusCosT = 1 - cosT;\n    return [[cosT + uX * uX * oneMinusCosT, uX * uY * oneMinusCosT - uZ * sinT, uX * uZ * oneMinusCosT + uY * sinT], [uY * uX * oneMinusCosT + uZ * sinT, cosT + uY * uY * oneMinusCosT, uY * uZ * oneMinusCosT - uX * sinT], [uZ * uX * oneMinusCosT - uY * sinT, uZ * uY * oneMinusCosT + uX * sinT, cosT + uZ * uZ * oneMinusCosT]];\n  };\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [x * scale * cameraPos / (z * scale + cameraPos) + width / 2, -y * scale * cameraPos / (z * scale + cameraPos) + height / 2];\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    options: {\n      passive: false\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [x, y, z] = point;\n          const cameraPos = 500;\n          const [projectedX, projectedY] = projectPoint([x, y, z]);\n          const radius = safeRadius(z, scale, cameraPos);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [lineStart, lineEnd] = axis;\n          const [x1, y1] = projectPoint(lineStart);\n          const [x2, y2] = projectPoint(lineEnd);\n          const axes = [\"X\", \"Y\", \"Z\"];\n          const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: colours[index],\n              strokeWidth: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x1 - 5,\n              y: y1 - 2,\n              fontSize: scale / 2.5,\n              fontWeight: \"bold\",\n              style: {\n                userSelect: \"none\"\n              },\n              children: axes[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"x\",\n      onClick: handleClick,\n      children: \"Rotate X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"y\",\n      onClick: handleClick,\n      children: \"Rotate Y\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"z\",\n      onClick: handleClick,\n      children: \"Rotate Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"testing\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TESTING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"kua36ofeM4FKcI4p1tIt0Es1zPE=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","dragging","setDragging","currentCoords","setCurrentCoords","width","height","get","then","response","data","catch","console","handleClick","e","length","typeOfRot","target","value","handleRotations","updateAxes","handleWheel","deltaY","newScale","Math","abs","xRot","yRot","zRot","zMoving","Rx","cos","sin","Ry","Rz","rotatedPoints","map","point","x","y","z","vector","zRotatedVector","zyRotatedVector","zyxRotatedVector","i","j","handleMouseDown","log","clientX","clientY","safeCoordDiff","minValue","animationFrame","handleMouseMove","cancelAnimationFrame","requestAnimationFrame","coordDiff","rotationZ","rotationX","min","max","rotationY","JSON","stringify","handleMouseUp","safeRadius","cameraPos","denominator","xRotationMatrix","createRotationMatrix","yRotationMatrix","zRotationMatrix","rotatePointsWithMatrix","matrix","axis","theta","uX","uY","uZ","cosT","sinT","oneMinusCosT","projectPoint","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","options","passive","id","onMouseDown","onMouseMove","onMouseUp","onWheel","border","projectedX","projectedY","radius","cx","cy","r","fill","index","lineStart","lineEnd","x1","y1","x2","y2","axes","colours","stroke","strokeWidth","fontSize","fontWeight","userSelect","onClick","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  // general variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // function display variables\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0])\n\n  const width = 500;\n  const height = 500;\n\n\n  // retrieve the calculated points from the backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // soon to be deprecated handles rotations manually with button clicks\n  const handleClick = (e) => {\n    if (points.length > 0) {\n      const typeOfRot = e.target.value\n      if (typeOfRot === \"x\") {\n        setPoints(handleRotations(.12, 0, 0, points))\n        updateAxes(.12, 0, 0)\n      }\n      else if (typeOfRot === \"y\") {\n        setPoints(handleRotations(0, .12, 0, points))\n        updateAxes(0, .12, 0)\n      }\n      else {\n        setPoints(handleRotations(0, 0, .12, points))\n        updateAxes(0, 0, .12)\n      }\n    }\n  };\n\n\n  // allows for scroll to zoom in or out\n  const handleWheel = (e) => {\n    const { deltaY } = e;\n    const newScale = \n      deltaY > 0 \n        ? scale - (0.075 * Math.abs(deltaY))\n        : scale + (0.075 * Math.abs(deltaY));\n\n    if (newScale > 1) {\n      setScale(newScale);\n    } else {\n      setScale(1);\n    }\n  }\n\n  // point rotation calculations in the frontend\n  const handleRotations = (xRot, yRot, zRot, points, zMoving) => {\n    const Rx = [\n      [1, 0, 0],\n      [0, Math.cos(xRot), -Math.sin(xRot)],\n      [0, Math.sin(xRot), Math.cos(xRot)]\n    ];\n\n    const Ry = [\n      [Math.cos(yRot), 0, Math.sin(yRot)],\n      [0, 1, 0],\n      [-Math.sin(yRot), 0, Math.cos(yRot)]\n    ];\n\n    const Rz = [\n      [Math.cos(zRot), -Math.sin(zRot), 0],\n      [Math.sin(zRot), Math.cos(zRot), 0],\n      [0, 0, 1]\n    ];\n\n    // Rotate all the points\n    const rotatedPoints = points.map(point => {\n      const [x, y, z] = point;\n      const vector = [x, y, z];\n      const zRotatedVector = [0, 0, 0];\n      const zyRotatedVector = [0, 0, 0];\n      const zyxRotatedVector = [0, 0, 0];\n\n      // Apply the x, y, and z rotations\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          zRotatedVector[i] += Rx[i][j] * vector[j];\n        }\n      }\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          zyRotatedVector[i] += Ry[i][j] * zRotatedVector[j];\n        }\n      }\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          zyxRotatedVector[i] += Rz[i][j] * zyRotatedVector[j];\n        }\n      }\n\n      return zyxRotatedVector;\n    });\n\n    return rotatedPoints;\n  };\n\n  // starts coordinate capture on mouse down\n  const handleMouseDown =  (e) => {\n    console.log(\"Mouse down: \", e.clientX, e.clientY);\n    setDragging(true)\n  }\n\n    // Safeguard to prevent division by zero or small values\n    const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n\n  let animationFrame;\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n  \n      animationFrame = requestAnimationFrame(() => {\n        const coordDiff = [\n          safeCoordDiff(e.clientX - currentCoords[0], 0.1), // Horizontal movement\n          safeCoordDiff(e.clientY - currentCoords[1], 0.1), // Vertical movement\n        ];\n\n        let rotationZ = 0\n        let rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n        // let rotationY = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        let rotationY = 0\n\n        if (JSON.stringify(zAxis) === JSON.stringify([[0, 0, 3.5], [0, 0, -3.5]])) {\n          rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n          rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n          rotationY = 0\n          // Update points and axes\n          setPoints(handleRotations(-rotationX, -rotationY, -rotationZ, points));\n          updateAxes(-rotationX, -rotationY, -rotationZ);\n        }\n  \n        // Update points and axes\n        setPoints(handleRotations(-rotationX, -rotationY, -rotationZ, points));\n        updateAxes(-rotationX, -rotationY, -rotationZ);\n  \n        // Update current coordinates\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  };  \n\n  const handleMouseUp = (e) => {\n    console.log(\"Mouse up: \", e.clientX, e.clientY);\n    setDragging(false)\n  } \n\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n  \n    if (denominator <= 0.2) {\n      return 0;\n    }\n  \n    return 1.5 * (1 / denominator);\n  };\n\n  // soon to be removed axis rotation\n  // const updateAxesOld = (typeOfRot) => {\n  //   axios.post('http://localhost:8000/rotate_points', {\n  //     type: typeOfRot,\n  //     newPoints: xAxis,\n  //     theta: .2,\n  //   }).then((response) => {\n  //     setXAxis(response.data.rotatedPoints);\n  //   });\n\n  //   axios.post('http://localhost:8000/rotate_points', {\n  //     type: typeOfRot,\n  //     newPoints: yAxis,\n  //     theta: .2,\n  //   }).then((response) => {\n  //     setYAxis(response.data.rotatedPoints);\n  //   });\n    \n  //   axios.post('http://localhost:8000/rotate_points', {\n  //     type: typeOfRot,\n  //     newPoints: zAxis,\n  //     theta: .2,\n  //   }).then((response) => {\n  //     setZAxis(response.data.rotatedPoints);\n  //   });\n  // };\n\n  const updateAxes = (xRot, yRot, zRot) => {\n    // Apply rotation around updated X-axis\n    const xRotationMatrix = createRotationMatrix(\n      [xAxis[1][0] - xAxis[0][0], xAxis[1][1]],\n      xRot\n    );\n  \n    // Apply rotation around updated Y-axis\n    const yRotationMatrix = createRotationMatrix(\n      [yAxis[1][0] - yAxis[0][0], yAxis[1][1]],\n      yRot\n    );\n  \n    // Apply rotation around updated Z-axis\n    const zRotationMatrix = createRotationMatrix(\n      [zAxis[1][0] - zAxis[0][0], zAxis[1][1] - zAxis[0][1], zAxis[1][2] - zAxis[0][2]],\n      zRot\n    );\n  \n    // Function to rotate points using a matrix\n    const rotatePointsWithMatrix = (points, matrix) =>\n      points.map((point) => {\n        const [x, y, z] = point;\n        return [\n          matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z,\n          matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z,\n          matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z,\n        ];\n      });\n  \n    // Update axes and points\n    setXAxis(rotatePointsWithMatrix(xAxis, xRotationMatrix));\n    setYAxis(rotatePointsWithMatrix(yAxis, yRotationMatrix));\n    setZAxis(rotatePointsWithMatrix(zAxis, zRotationMatrix));\n  };\n  \n\n  const createRotationMatrix = (axis, theta) => {\n  const [uX, uY, uZ] = axis;\n  const cosT = Math.cos(theta);\n  const sinT = Math.sin(theta);\n  const oneMinusCosT = 1 - cosT;\n\n  return [\n    [\n      cosT + uX * uX * oneMinusCosT,\n      uX * uY * oneMinusCosT - uZ * sinT,\n      uX * uZ * oneMinusCosT + uY * sinT,\n    ],\n    [\n      uY * uX * oneMinusCosT + uZ * sinT,\n      cosT + uY * uY * oneMinusCosT,\n      uY * uZ * oneMinusCosT - uX * sinT,\n    ],\n    [\n      uZ * uX * oneMinusCosT - uY * sinT,\n      uZ * uY * oneMinusCosT + uX * sinT,\n      cosT + uZ * uZ * oneMinusCosT,\n    ],\n  ];\n};\n\n\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [\n      (x * scale * cameraPos) / (z * scale + cameraPos) + width / 2,\n      (-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2,\n    ];\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{overflow: 'hidden'}} options={{ passive: false }}>\n      <h1>Visualization</h1>\n      <div id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg\n          onWheel={handleWheel}\n          width={width}\n          height={height}\n          style={{ border: '1px solid black' }}\n        >\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const cameraPos = 500\n            \n            const [projectedX, projectedY] = projectPoint([x, y, z])\n\n            const radius = safeRadius(z, scale, cameraPos);\n\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={radius}\n                fill={colour}\n              />\n            );\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [lineStart, lineEnd] = axis;\n            const [x1, y1] = projectPoint(lineStart);\n            const [x2, y2] = projectPoint(lineEnd);\n            const axes = [\"X\", \"Y\", \"Z\"]\n            const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"]\n\n            return (\n              <g key={index}>\n                <line\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke={colours[index]}\n                  strokeWidth={3}\n                />\n                <text x={x1 - 5} y={y1 - 2} fontSize={scale / 2.5} fontWeight=\"bold\" style={{ userSelect: \"none\" }}>{axes[index]}</text>\n              </g>\n            )\n          })}\n        </svg>\n      </div>\n      <button value=\"x\" onClick={handleClick} >Rotate X</button>\n      <button value=\"y\" onClick={handleClick}>Rotate Y</button>\n      <button value=\"z\" onClick={handleClick}>Rotate Z</button>\n      <div id='testing'>\n        <h1>TESTING</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}