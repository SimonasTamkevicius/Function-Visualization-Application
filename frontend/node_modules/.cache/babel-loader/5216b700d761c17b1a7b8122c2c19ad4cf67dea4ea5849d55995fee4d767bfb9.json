{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const animationFrameRef = useRef(null);\n  const width = 500;\n  const height = 500;\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n  const unitizeVector = v => {\n    const magnitude = Math.sqrt(v[0] ** 2 + v[1] ** 2 + v[2] ** 2);\n    return v.map(component => component / magnitude);\n  };\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n    return [[cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin], [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin], [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos]];\n  };\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [axis[1][0] - axis[0][0], axis[1][1] - axis[0][1], axis[1][2] - axis[0][2]];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n    return points.map(point => {\n      const rotated = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          rotated[i] += R[i][j] * point[j];\n        }\n      }\n      return rotated;\n    });\n  };\n  const updateAxes = (theta, axis) => {\n    return handleRotations(theta, axis, axis);\n  };\n  const handleWheel = e => {\n    const {\n      deltaY\n    } = e;\n    const newScale = deltaY > 0 ? scale - 0.075 * Math.abs(deltaY) : scale + 0.075 * Math.abs(deltaY);\n    setScale(newScale > 1 ? newScale : 1);\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = requestAnimationFrame(() => {\n        const coordDiff = [e.clientX - currentCoords[0], e.clientY - currentCoords[1]];\n        const rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        setPoints(handleRotations(rotationX, points, xAxis));\n        setPoints(handleRotations(rotationZ, points, zAxis));\n        setXAxis(updateAxes(rotationX, xAxis));\n        setZAxis(updateAxes(rotationZ, zAxis));\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const projectPoint = ([x, y, z], cameraPos = 1000) => [x * scale * cameraPos / (z * scale + cameraPos) + width / 2, -y * scale * cameraPos / (z * scale + cameraPos) + height / 2];\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n    return denominator <= 0.2 ? 0 : 1.5 * (1 / denominator);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [projectedX, projectedY] = projectPoint(point);\n          const radius = safeRadius(point[2], scale, 500);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 20\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [x1, y1] = projectPoint(axis[0]);\n          const [x2, y2] = projectPoint(axis[1]);\n          const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: colours[index],\n              strokeWidth: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: (x1 + x2) / 2,\n              y: (y1 + y2) / 2,\n              fontSize: scale / 2.5,\n              fontWeight: \"bold\",\n              children: [\"X\", \"Y\", \"Z\"][index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"Q5bcZAgJI87m1tzHYte1P00klgw=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","dragging","setDragging","currentCoords","setCurrentCoords","animationFrameRef","width","height","get","then","response","data","catch","console","unitizeVector","v","magnitude","Math","sqrt","map","component","createRotationMatrix","ux","uy","uz","theta","cos","sin","oneMinusCos","handleRotations","axis","directionVector","R","point","rotated","i","j","updateAxes","handleWheel","e","deltaY","newScale","abs","handleMouseDown","clientX","clientY","handleMouseMove","current","cancelAnimationFrame","requestAnimationFrame","coordDiff","rotationX","min","max","rotationZ","handleMouseUp","projectPoint","x","y","z","cameraPos","safeRadius","denominator","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","id","onMouseDown","onMouseMove","onMouseUp","onWheel","border","projectedX","projectedY","radius","cx","cy","r","fill","index","x1","y1","x2","y2","colours","stroke","strokeWidth","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n\n  const animationFrameRef = useRef(null);\n\n  const width = 500;\n  const height = 500;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  const unitizeVector = (v) => {\n    const magnitude = Math.sqrt(v[0] ** 2 + v[1] ** 2 + v[2] ** 2);\n    return v.map(component => component / magnitude);\n  };\n\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n\n    return [\n      [cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin],\n      [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin],\n      [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos]\n    ];\n  };\n\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [\n      axis[1][0] - axis[0][0],\n      axis[1][1] - axis[0][1],\n      axis[1][2] - axis[0][2],\n    ];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n\n    return points.map(point => {\n      const rotated = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          rotated[i] += R[i][j] * point[j];\n        }\n      }\n      return rotated;\n    });\n  };\n\n  const updateAxes = (theta, axis) => {\n    return handleRotations(theta, axis, axis);\n  };\n\n  const handleWheel = (e) => {\n    const { deltaY } = e;\n    const newScale = deltaY > 0 ? scale - 0.075 * Math.abs(deltaY) : scale + 0.075 * Math.abs(deltaY);\n    setScale(newScale > 1 ? newScale : 1);\n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n\n      animationFrameRef.current = requestAnimationFrame(() => {\n        const coordDiff = [\n          e.clientX - currentCoords[0],\n          e.clientY - currentCoords[1],\n        ];\n\n        const rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n\n        setPoints(handleRotations(rotationX, points, xAxis));\n        setPoints(handleRotations(rotationZ, points, zAxis));\n\n        setXAxis(updateAxes(rotationX, xAxis));\n        setZAxis(updateAxes(rotationZ, zAxis));\n\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const projectPoint = ([x, y, z], cameraPos = 1000) => [\n    (x * scale * cameraPos) / (z * scale + cameraPos) + width / 2,\n    (-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2,\n  ];\n\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n    return denominator <= 0.2 ? 0 : 1.5 * (1 / denominator);\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{ overflow: 'hidden' }}>\n      <h1>Visualization</h1>\n      <div\n        id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg onWheel={handleWheel} width={width} height={height} style={{ border: '1px solid black' }}>\n          {points.map((point, i) => {\n            const [projectedX, projectedY] = projectPoint(point);\n            const radius = safeRadius(point[2], scale, 500);\n            return <circle key={i} cx={projectedX} cy={projectedY} r={radius} fill={colour} />;\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [x1, y1] = projectPoint(axis[0]);\n            const [x2, y2] = projectPoint(axis[1]);\n            const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n            return (\n              <g key={index}>\n                <line x1={x1} y1={y1} x2={x2} y2={y2} stroke={colours[index]} strokeWidth={3} />\n                <text x={(x1 + x2) / 2} y={(y1 + y2) / 2} fontSize={scale / 2.5} fontWeight=\"bold\">\n                  {[\"X\", \"Y\", \"Z\"][index]}\n                </text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}