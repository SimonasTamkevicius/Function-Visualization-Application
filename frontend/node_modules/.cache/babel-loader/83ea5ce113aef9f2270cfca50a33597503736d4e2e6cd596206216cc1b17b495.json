{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [points, setPoints] = useState([]);\n  const [rotatedPoints, setRotatedPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(30);\n  const svgContainerRef = useRef(null);\n  const svgSlate = useRef(null);\n  const width = 500;\n  const height = 500;\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   axios\n  //     .get('http://localhost:8000/rotated_points')\n  //     .then((response) => {\n  //       setRotatedPoints(response.data.rotatedPoints);\n  //       setLoading(false);\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error fetching points:', error);\n  //       setError('Failed to fetch points');\n  //       setLoading(false);\n  //     });\n  // }, []);\n\n  const handleXClick = () => {\n    if (points.length > 0) {\n      axios.post('http://localhost:8000/rotate_points', {\n        type: \"x\",\n        newPoints: points\n      }).then(response => {\n        if (response.status === 200) {\n          console.log(response.data.rotatedPoints);\n          setPoints(response.data.rotatedPoints);\n        } else {\n          throw new Error(\"Failed to rotate points!\");\n        }\n      }).catch(error => {\n        console.error(\"Error:\", error);\n      });\n    }\n  };\n  const handleWheel = e => {\n    e.preventDefault();\n    const {\n      deltaY\n    } = e;\n    console.log(deltaY);\n  };\n  useEffect(() => {\n    svgSlate = svgContainerRef.current;\n    svgSlate.addEventListener('wheel', handleWheel);\n    return () => {\n      svgSlate.removeEventListener('wheel', handleWheel);\n    };\n  }, handleWheel);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgContainerRef,\n      width: width,\n      height: height,\n      style: {\n        border: '1px solid black'\n      },\n      children: points.map((point, i) => {\n        const [x, y, z] = point;\n        const perspective = 500; // Adjust this for a more pronounced 3D effect\n\n        // Apply perspective projection: Points closer to the camera (z-value smaller) will appear larger\n        const projectedX = x * scale / (1 + z * scale / perspective) + width / 2;\n        const projectedY = -y * scale / (1 + z * scale / perspective) + height / 2;\n\n        // Optional: Adjust radius of the circle to simulate 3D size\n        const radius = 1.5 * (1 / (1 + z * scale / perspective)); // Radius decreases with depth\n\n        return /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: projectedX,\n          cy: projectedY,\n          r: radius,\n          fill: \"blue\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleXClick(),\n      children: \"Rotate X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"pVWjJcOvXzq+2O7RTskfgTLAWHQ=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","points","setPoints","rotatedPoints","setRotatedPoints","loading","setLoading","error","setError","scale","setScale","svgContainerRef","svgSlate","width","height","get","then","response","data","catch","console","handleXClick","length","post","type","newPoints","status","log","Error","handleWheel","e","preventDefault","deltaY","current","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","map","point","i","x","y","z","perspective","projectedX","projectedY","radius","cx","cy","r","fill","onClick","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  const [points, setPoints] = useState([]);\n  const [rotatedPoints, setRotatedPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(30)\n  const svgContainerRef = useRef(null)\n  const svgSlate = useRef(null)\n\n  const width = 500;\n  const height = 500;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // useEffect(() => {\n  //   axios\n  //     .get('http://localhost:8000/rotated_points')\n  //     .then((response) => {\n  //       setRotatedPoints(response.data.rotatedPoints);\n  //       setLoading(false);\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error fetching points:', error);\n  //       setError('Failed to fetch points');\n  //       setLoading(false);\n  //     });\n  // }, []);\n\n\n  const handleXClick = () => {\n    if (points.length > 0) {\n      axios\n        .post('http://localhost:8000/rotate_points', {\n          type: \"x\",\n          newPoints: points,\n        })\n        .then(response => {\n          if (response.status === 200) {\n            console.log(response.data.rotatedPoints);\n            \n            setPoints(response.data.rotatedPoints);\n          } else {\n            throw new Error(\"Failed to rotate points!\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Error:\", error);\n        });\n    }\n  }\n\n  const handleWheel = (e) => {\n    e.preventDefault()\n    const { deltaY } = e\n    console.log(deltaY);\n    \n    \n  }\n\n  useEffect(() => {\n    svgSlate = svgContainerRef.current\n    svgSlate.addEventListener('wheel', handleWheel);\n    return () => {\n      svgSlate.removeEventListener('wheel', handleWheel);\n    }\n  }, handleWheel)\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h1>Visualization</h1>\n      <svg ref={svgContainerRef} width={width} height={height} style={{ border: '1px solid black' }}>\n        {points.map((point, i) => {\n          const [x, y, z] = point;\n          const perspective = 500; // Adjust this for a more pronounced 3D effect\n\n          // Apply perspective projection: Points closer to the camera (z-value smaller) will appear larger\n          const projectedX = (x * scale) / (1 + z * scale / perspective) + width / 2;\n          const projectedY = (-y * scale) / (1 + z * scale / perspective) + height / 2;\n\n          // Optional: Adjust radius of the circle to simulate 3D size\n          const radius = 1.5 * (1 / (1 + z * scale / perspective)); // Radius decreases with depth\n\n          return (\n            <circle\n              key={i}\n              cx={projectedX}\n              cy={projectedY}\n              r={radius}\n              fill=\"blue\"\n            />\n          );\n        })}\n      </svg>\n      <button onClick={() => handleXClick()}>Rotate X</button>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}