{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const width = 500;\n  const height = 500;\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('http://localhost:8000/rotated_points').then(response => {\n      setPoints(response.data.rotated_points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      style: {\n        border: '1px solid black'\n      },\n      children: points.map((point, i) => {\n        const [x, y, z] = point;\n        const perspective = 200; // Distance to \"camera\"\n        const projectedX = x * 30 / (1 + z / perspective) + width / 2;\n        const projectedY = -y * 30 / (1 + z / perspective) + height / 2;\n        return /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: projectedX,\n          cy: projectedY,\n          r: \"2\",\n          fill: \"blue\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"0+lWJ1jlfx23kZxMIXycyk7RFQM=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","points","setPoints","loading","setLoading","error","setError","width","height","get","then","response","data","catch","console","rotated_points","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","map","point","i","x","y","z","perspective","projectedX","projectedY","cx","cy","r","fill","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const width = 500;\n  const height = 500;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/rotated_points')\n      .then((response) => {\n        setPoints(response.data.rotated_points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h1>Visualization</h1>\n      <svg width={width} height={height} style={{ border: '1px solid black' }}>\n        {points.map((point, i) => {\n          const [x, y, z] = point;\n          const perspective = 200; // Distance to \"camera\"\n          const projectedX = (x * 30) / (1 + z / perspective) + width / 2;\n          const projectedY = (-y * 30) / (1 + z / perspective) + height / 2;\n\n          return (\n            <circle\n              key={i}\n              cx={projectedX}\n              cy={projectedY}\n              r=\"2\"\n              fill=\"blue\"\n            />\n          );\n        })}\n      </svg>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAElBd,SAAS,CAAC,MAAM;IACdE,KAAK,CACFa,GAAG,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAClBT,SAAS,CAACS,QAAQ,CAACC,IAAI,CAACX,MAAM,CAAC;MAC/BG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDS,KAAK,CAAER,KAAK,IAAK;MAChBS,OAAO,CAACT,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,wBAAwB,CAAC;MAClCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACNV,SAAS,CAAC,MAAM;IACdE,KAAK,CACFa,GAAG,CAAC,sCAAsC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,IAAK;MAClBT,SAAS,CAACS,QAAQ,CAACC,IAAI,CAACG,cAAc,CAAC;MACvCX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDS,KAAK,CAAER,KAAK,IAAK;MAChBS,OAAO,CAACT,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,wBAAwB,CAAC;MAClCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAkB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIf,KAAK,EAAE,oBAAOP,OAAA;IAAAkB,QAAA,EAAIX;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA;MAAKS,KAAK,EAAEA,KAAM;MAACC,MAAM,EAAEA,MAAO;MAACa,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAkB,CAAE;MAAAN,QAAA,EACrEf,MAAM,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;QACxB,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGJ,KAAK;QACvB,MAAMK,WAAW,GAAG,GAAG,CAAC,CAAC;QACzB,MAAMC,UAAU,GAAIJ,CAAC,GAAG,EAAE,IAAK,CAAC,GAAGE,CAAC,GAAGC,WAAW,CAAC,GAAGtB,KAAK,GAAG,CAAC;QAC/D,MAAMwB,UAAU,GAAI,CAACJ,CAAC,GAAG,EAAE,IAAK,CAAC,GAAGC,CAAC,GAAGC,WAAW,CAAC,GAAGrB,MAAM,GAAG,CAAC;QAEjE,oBACEV,OAAA;UAEEkC,EAAE,EAAEF,UAAW;UACfG,EAAE,EAAEF,UAAW;UACfG,CAAC,EAAC,GAAG;UACLC,IAAI,EAAC;QAAM,GAJNV,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKP,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7DID,sBAAsB;AAAAqC,EAAA,GAAtBrC,sBAAsB;AA+D5B,eAAeA,sBAAsB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}