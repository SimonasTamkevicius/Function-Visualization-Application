{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const width = 500;\n  const height = 500;\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      style: {\n        border: '1px solid black'\n      },\n      children: [points.map((point, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: point[0] * 10 + width / 2,\n        cy: -point[1] * 10 + height / 2 // Correct Y-axis inversion\n        ,\n        r: \"2\",\n        fill: \"blue\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: width / 2,\n        cy: height / 2,\n        r: \"5\",\n        fill: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"t5Rj2evFMPBggwgHz8P7BHF/EsQ=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["VisualizationContainer","_s","points","setPoints","useState","loading","setLoading","error","setError","width","height","useEffect","axios","get","then","response","data","catch","console","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","map","point","i","cx","cy","r","fill","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js"],"sourcesContent":["const VisualizationContainer = () => {\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const width = 500;\n  const height = 500;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h1>Visualization</h1>\n      <svg width={width} height={height} style={{ border: '1px solid black' }}>\n        {points.map((point, i) => (\n          <circle\n            key={i}\n            cx={point[0] * 10 + width / 2}\n            cy={-point[1] * 10 + height / 2} // Correct Y-axis inversion\n            r=\"2\"\n            fill=\"blue\"\n          />\n        ))}\n        <circle cx={width / 2} cy={height / 2} r=\"5\" fill=\"red\" />\n      </svg>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":";;;AAAA,MAAMA,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMK,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAElBC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFC,GAAG,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAClBZ,SAAS,CAACY,QAAQ,CAACC,IAAI,CAACd,MAAM,CAAC;MAC/BI,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDW,KAAK,CAAEV,KAAK,IAAK;MAChBW,OAAO,CAACX,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,wBAAwB,CAAC;MAClCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOc,OAAA;IAAAC,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIjB,KAAK,EAAE,oBAAOY,OAAA;IAAAC,QAAA,EAAIb;EAAK;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACEL,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBL,OAAA;MAAKV,KAAK,EAAEA,KAAM;MAACC,MAAM,EAAEA,MAAO;MAACe,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAkB,CAAE;MAAAN,QAAA,GACrElB,MAAM,CAACyB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACnBV,OAAA;QAEEW,EAAE,EAAEF,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGnB,KAAK,GAAG,CAAE;QAC9BsB,EAAE,EAAE,CAACH,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGlB,MAAM,GAAG,CAAE,CAAC;QAAA;QACjCsB,CAAC,EAAC,GAAG;QACLC,IAAI,EAAC;MAAM,GAJNJ,CAAC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACF,CAAC,eACFL,OAAA;QAAQW,EAAE,EAAErB,KAAK,GAAG,CAAE;QAACsB,EAAE,EAAErB,MAAM,GAAG,CAAE;QAACsB,CAAC,EAAC,GAAG;QAACC,IAAI,EAAC;MAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1CID,sBAAsB;AAAAkC,EAAA,GAAtBlC,sBAAsB;AA4C5B,eAAeA,sBAAsB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}