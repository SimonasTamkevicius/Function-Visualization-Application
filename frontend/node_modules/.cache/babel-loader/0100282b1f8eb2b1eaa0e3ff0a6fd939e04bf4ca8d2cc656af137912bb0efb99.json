{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 500;\n  const height = 500;\n\n  // Calculate the center of a set of points\n  const calculateCenter = points => {\n    if (!points.length) return [0, 0, 0];\n    const center = points.reduce((acc, point) => {\n      return [acc[0] + point[0], acc[1] + point[1], acc[2] + point[2]];\n    }, [0, 0, 0]);\n    return center.map(val => val / points.length);\n  };\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      const fetchedPoints = response.data.points;\n      const center = calculateCenter(fetchedPoints);\n      const recentredPoints = fetchedPoints.map(p => [p[0] - center[0], p[1] - center[1], p[2] - center[2]]);\n      setPoints(recentredPoints);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // Handle rotations manually with button clicks\n  const handleClick = e => {\n    if (points.length > 0) {\n      const typeOfRot = e.target.value;\n      let rotatedPoints = points;\n      if (typeOfRot === \"x\") {\n        rotatedPoints = handleRotations(0.12, 0, 0, points);\n        updateAxes(0.12, 0, 0);\n      } else if (typeOfRot === \"y\") {\n        rotatedPoints = handleRotations(0, 0.12, 0, points);\n        updateAxes(0, 0.12, 0);\n      } else {\n        rotatedPoints = handleRotations(0, 0, 0.12, points);\n        updateAxes(0, 0, 0.12);\n      }\n      const center = calculateCenter(rotatedPoints);\n      setPoints(recentrePoints(rotatedPoints, center));\n    }\n  };\n\n  // Recentre points to the origin\n  const recentrePoints = (points, center) => {\n    return points.map(p => [p[0] - center[0], p[1] - center[1], p[2] - center[2]]);\n  };\n\n  // Allows for scroll to zoom in or out\n  const handleWheel = e => {\n    const {\n      deltaY\n    } = e;\n    const newScale = deltaY > 0 ? scale - 0.075 * Math.abs(deltaY) : scale + 0.075 * Math.abs(deltaY);\n    setScale(newScale > 1 ? newScale : 1);\n  };\n\n  // Point rotation calculations\n  const handleRotations = (xRot, yRot, zRot, points) => {\n    const Rx = [[1, 0, 0], [0, Math.cos(xRot), -Math.sin(xRot)], [0, Math.sin(xRot), Math.cos(xRot)]];\n    const Ry = [[Math.cos(yRot), 0, Math.sin(yRot)], [0, 1, 0], [-Math.sin(yRot), 0, Math.cos(yRot)]];\n    const Rz = [[Math.cos(zRot), -Math.sin(zRot), 0], [Math.sin(zRot), Math.cos(zRot), 0], [0, 0, 1]];\n    return points.map(([x, y, z]) => {\n      const vector = [x, y, z];\n      const xRotated = multiplyMatrixVector(Rx, vector);\n      const xyRotated = multiplyMatrixVector(Ry, xRotated);\n      return multiplyMatrixVector(Rz, xyRotated);\n    });\n  };\n\n  // Matrix-vector multiplication helper\n  const multiplyMatrixVector = (matrix, vector) => {\n    return matrix.map(row => row.reduce((sum, val, i) => sum + val * vector[i], 0));\n  };\n\n  // Starts coordinate capture on mouse down\n  const handleMouseDown = e => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n  let animationFrame;\n  const handleMouseMove = e => {\n    if (dragging) {\n      if (animationFrame) cancelAnimationFrame(animationFrame);\n      animationFrame = requestAnimationFrame(() => {\n        const coordDiff = [e.clientX - currentCoords[0], e.clientY - currentCoords[1]];\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        const rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n        const rotatedPoints = handleRotations(-rotationX, 0, rotationZ, points);\n        const center = calculateCenter(rotatedPoints);\n        setPoints(recentrePoints(rotatedPoints, center));\n        updateAxes(-rotationX, 0, rotationZ);\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  };\n  const handleMouseUp = () => setDragging(false);\n  const updateAxes = (xRot, yRot, zRot) => {\n    setXAxis(handleRotations(xRot, yRot, zRot, xAxis));\n    setYAxis(handleRotations(xRot, yRot, zRot, yAxis));\n    setZAxis(handleRotations(xRot, yRot, zRot, zAxis));\n  };\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [x * scale * cameraPos / (z * scale + cameraPos) + width / 2, -y * scale * cameraPos / (z * scale + cameraPos) + height / 2];\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: points.map((point, i) => {\n          const [projectedX, projectedY] = projectPoint(point);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: 2,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"x\",\n      onClick: handleClick,\n      children: \"Rotate X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"y\",\n      onClick: handleClick,\n      children: \"Rotate Y\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"z\",\n      onClick: handleClick,\n      children: \"Rotate Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"kua36ofeM4FKcI4p1tIt0Es1zPE=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","dragging","setDragging","currentCoords","setCurrentCoords","width","height","calculateCenter","length","center","reduce","acc","point","map","val","get","then","response","fetchedPoints","data","recentredPoints","p","catch","console","handleClick","e","typeOfRot","target","value","rotatedPoints","handleRotations","updateAxes","recentrePoints","handleWheel","deltaY","newScale","Math","abs","xRot","yRot","zRot","Rx","cos","sin","Ry","Rz","x","y","z","vector","xRotated","multiplyMatrixVector","xyRotated","matrix","row","sum","i","handleMouseDown","clientX","clientY","animationFrame","handleMouseMove","cancelAnimationFrame","requestAnimationFrame","coordDiff","rotationZ","min","max","rotationX","handleMouseUp","projectPoint","cameraPos","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","onMouseDown","onMouseMove","onMouseUp","onWheel","border","projectedX","projectedY","cx","cy","r","fill","onClick","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n\n  const width = 500;\n  const height = 500;\n\n  // Calculate the center of a set of points\n  const calculateCenter = (points) => {\n    if (!points.length) return [0, 0, 0];\n    const center = points.reduce(\n      (acc, point) => {\n        return [acc[0] + point[0], acc[1] + point[1], acc[2] + point[2]];\n      },\n      [0, 0, 0]\n    );\n    return center.map((val) => val / points.length);\n  };\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        const fetchedPoints = response.data.points;\n        const center = calculateCenter(fetchedPoints);\n        const recentredPoints = fetchedPoints.map((p) => [\n          p[0] - center[0],\n          p[1] - center[1],\n          p[2] - center[2],\n        ]);\n        setPoints(recentredPoints);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // Handle rotations manually with button clicks\n  const handleClick = (e) => {\n    if (points.length > 0) {\n      const typeOfRot = e.target.value;\n      let rotatedPoints = points;\n      if (typeOfRot === \"x\") {\n        rotatedPoints = handleRotations(0.12, 0, 0, points);\n        updateAxes(0.12, 0, 0);\n      } else if (typeOfRot === \"y\") {\n        rotatedPoints = handleRotations(0, 0.12, 0, points);\n        updateAxes(0, 0.12, 0);\n      } else {\n        rotatedPoints = handleRotations(0, 0, 0.12, points);\n        updateAxes(0, 0, 0.12);\n      }\n      const center = calculateCenter(rotatedPoints);\n      setPoints(recentrePoints(rotatedPoints, center));\n    }\n  };\n\n  // Recentre points to the origin\n  const recentrePoints = (points, center) => {\n    return points.map((p) => [\n      p[0] - center[0],\n      p[1] - center[1],\n      p[2] - center[2],\n    ]);\n  };\n\n  // Allows for scroll to zoom in or out\n  const handleWheel = (e) => {\n    const { deltaY } = e;\n    const newScale =\n      deltaY > 0\n        ? scale - 0.075 * Math.abs(deltaY)\n        : scale + 0.075 * Math.abs(deltaY);\n\n    setScale(newScale > 1 ? newScale : 1);\n  };\n\n  // Point rotation calculations\n  const handleRotations = (xRot, yRot, zRot, points) => {\n    const Rx = [\n      [1, 0, 0],\n      [0, Math.cos(xRot), -Math.sin(xRot)],\n      [0, Math.sin(xRot), Math.cos(xRot)],\n    ];\n\n    const Ry = [\n      [Math.cos(yRot), 0, Math.sin(yRot)],\n      [0, 1, 0],\n      [-Math.sin(yRot), 0, Math.cos(yRot)],\n    ];\n\n    const Rz = [\n      [Math.cos(zRot), -Math.sin(zRot), 0],\n      [Math.sin(zRot), Math.cos(zRot), 0],\n      [0, 0, 1],\n    ];\n\n    return points.map(([x, y, z]) => {\n      const vector = [x, y, z];\n      const xRotated = multiplyMatrixVector(Rx, vector);\n      const xyRotated = multiplyMatrixVector(Ry, xRotated);\n      return multiplyMatrixVector(Rz, xyRotated);\n    });\n  };\n\n  // Matrix-vector multiplication helper\n  const multiplyMatrixVector = (matrix, vector) => {\n    return matrix.map((row) => row.reduce((sum, val, i) => sum + val * vector[i], 0));\n  };\n\n  // Starts coordinate capture on mouse down\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  let animationFrame;\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      if (animationFrame) cancelAnimationFrame(animationFrame);\n\n      animationFrame = requestAnimationFrame(() => {\n        const coordDiff = [\n          e.clientX - currentCoords[0],\n          e.clientY - currentCoords[1],\n        ];\n\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        const rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n\n        const rotatedPoints = handleRotations(-rotationX, 0, rotationZ, points);\n        const center = calculateCenter(rotatedPoints);\n\n        setPoints(recentrePoints(rotatedPoints, center));\n        updateAxes(-rotationX, 0, rotationZ);\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  };\n\n  const handleMouseUp = () => setDragging(false);\n\n  const updateAxes = (xRot, yRot, zRot) => {\n    setXAxis(handleRotations(xRot, yRot, zRot, xAxis));\n    setYAxis(handleRotations(xRot, yRot, zRot, yAxis));\n    setZAxis(handleRotations(xRot, yRot, zRot, zAxis));\n  };\n\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [\n      (x * scale * cameraPos) / (z * scale + cameraPos) + width / 2,\n      (-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2,\n    ];\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{ overflow: 'hidden' }}>\n      <h1>Visualization</h1>\n      <div\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg onWheel={handleWheel} width={width} height={height} style={{ border: '1px solid black' }}>\n          {points.map((point, i) => {\n            const [projectedX, projectedY] = projectPoint(point);\n            return <circle key={i} cx={projectedX} cy={projectedY} r={2} fill={colour} />;\n          })}\n        </svg>\n      </div>\n      <button value=\"x\" onClick={handleClick}>Rotate X</button>\n      <button value=\"y\" onClick={handleClick}>Rotate Y</button>\n      <button value=\"z\" onClick={handleClick}>Rotate Z</button>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}