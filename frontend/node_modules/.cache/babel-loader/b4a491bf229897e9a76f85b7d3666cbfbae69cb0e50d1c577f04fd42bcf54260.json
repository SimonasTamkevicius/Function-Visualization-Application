{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(30);\n  const width = 500;\n  const height = 500;\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n  const handleXClick = () => {\n    if (points.length > 0) {\n      axios.post('http://localhost:8000/rotate_points', {\n        type: 'x',\n        newPoints: points\n      }).then(response => {\n        if (response.status === 200) {\n          setPoints(response.data.rotatedPoints);\n        } else {\n          throw new Error('Failed to rotate points!');\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  const handleWheel = e => {\n    const {\n      deltaY,\n      target\n    } = e;\n\n    // Ensure the event target is the SVG element\n    if (target.tagName === 'SVG') {\n      console.log('deltaY:', deltaY); // Log deltaY when scroll happens\n\n      // Adjust the scale based on the scroll direction\n      if (deltaY < 0) {\n        setScale(prevScale => prevScale * 1.1); // Zoom in\n      } else {\n        setScale(prevScale => prevScale / 1.1); // Zoom out\n      }\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('wheel', handleWheel);\n\n    // Cleanup event listener when component unmounts\n    return () => {\n      document.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: points.map((point, i) => {\n          const [x, y, z] = point;\n          const perspective = 500; // Adjust this for a more pronounced 3D effect\n\n          // Apply perspective projection: Points closer to the camera (z-value smaller) will appear larger\n          const projectedX = x * scale / (1 + z * scale / perspective) + width / 2;\n          const projectedY = -y * scale / (1 + z * scale / perspective) + height / 2;\n\n          // Optional: Adjust radius of the circle to simulate 3D size\n          const radius = 1.5 * (1 / (1 + z * scale / perspective)); // Radius decreases with depth\n\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: \"blue\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleXClick,\n      children: \"Rotate X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"v1LaGGm5UFLn3i95M3h2iVPbxtU=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","points","setPoints","loading","setLoading","error","setError","scale","setScale","width","height","get","then","response","data","catch","console","handleXClick","length","post","type","newPoints","status","rotatedPoints","Error","handleWheel","e","deltaY","target","tagName","log","prevScale","document","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","map","point","i","x","y","z","perspective","projectedX","projectedY","radius","cx","cy","r","fill","onClick","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(30);\n\n  const width = 500;\n  const height = 500;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  const handleXClick = () => {\n    if (points.length > 0) {\n      axios\n        .post('http://localhost:8000/rotate_points', {\n          type: 'x',\n          newPoints: points,\n        })\n        .then((response) => {\n          if (response.status === 200) {\n            setPoints(response.data.rotatedPoints);\n          } else {\n            throw new Error('Failed to rotate points!');\n          }\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n        });\n    }\n  };\n\n  const handleWheel = (e) => {\n    const { deltaY, target } = e;\n\n    // Ensure the event target is the SVG element\n    if (target.tagName === 'SVG') {\n      console.log('deltaY:', deltaY); // Log deltaY when scroll happens\n\n      // Adjust the scale based on the scroll direction\n      if (deltaY < 0) {\n        setScale((prevScale) => prevScale * 1.1); // Zoom in\n      } else {\n        setScale((prevScale) => prevScale / 1.1); // Zoom out\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('wheel', handleWheel);\n\n    // Cleanup event listener when component unmounts\n    return () => {\n      document.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h1>Visualization</h1>\n      <div>\n        <svg width={width} height={height} style={{ border: '1px solid black' }}>\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const perspective = 500; // Adjust this for a more pronounced 3D effect\n\n            // Apply perspective projection: Points closer to the camera (z-value smaller) will appear larger\n            const projectedX =\n              (x * scale) / (1 + z * scale / perspective) + width / 2;\n            const projectedY =\n              (-y * scale) / (1 + z * scale / perspective) + height / 2;\n\n            // Optional: Adjust radius of the circle to simulate 3D size\n            const radius = 1.5 * (1 / (1 + z * scale / perspective)); // Radius decreases with depth\n\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={radius}\n                fill=\"blue\"\n              />\n            );\n          })}\n        </svg>\n      </div>\n      <button onClick={handleXClick}>Rotate X</button>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAElBhB,SAAS,CAAC,MAAM;IACdE,KAAK,CACFe,GAAG,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAClBX,SAAS,CAACW,QAAQ,CAACC,IAAI,CAACb,MAAM,CAAC;MAC/BG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDW,KAAK,CAAEV,KAAK,IAAK;MAChBW,OAAO,CAACX,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,wBAAwB,CAAC;MAClCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIhB,MAAM,CAACiB,MAAM,GAAG,CAAC,EAAE;MACrBtB,KAAK,CACFuB,IAAI,CAAC,qCAAqC,EAAE;QAC3CC,IAAI,EAAE,GAAG;QACTC,SAAS,EAAEpB;MACb,CAAC,CAAC,CACDW,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;UAC3BpB,SAAS,CAACW,QAAQ,CAACC,IAAI,CAACS,aAAa,CAAC;QACxC,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;MACF,CAAC,CAAC,CACDT,KAAK,CAAEV,KAAK,IAAK;QAChBW,OAAO,CAACX,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMoB,WAAW,GAAIC,CAAC,IAAK;IACzB,MAAM;MAAEC,MAAM;MAAEC;IAAO,CAAC,GAAGF,CAAC;;IAE5B;IACA,IAAIE,MAAM,CAACC,OAAO,KAAK,KAAK,EAAE;MAC5Bb,OAAO,CAACc,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC,CAAC,CAAC;;MAEhC;MACA,IAAIA,MAAM,GAAG,CAAC,EAAE;QACdnB,QAAQ,CAAEuB,SAAS,IAAKA,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC;MAC5C,CAAC,MAAM;QACLvB,QAAQ,CAAEuB,SAAS,IAAKA,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC;MAC5C;IACF;EACF,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACdsC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAER,WAAW,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXO,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAET,WAAW,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAItB,OAAO,EAAE,oBAAOL,OAAA;IAAAqC,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIlC,KAAK,EAAE,oBAAOP,OAAA;IAAAqC,QAAA,EAAI9B;EAAK;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACEzC,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzC,OAAA;MAAAqC,QAAA,eACErC,OAAA;QAAKW,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAEA,MAAO;QAAC8B,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAkB,CAAE;QAAAN,QAAA,EACrElC,MAAM,CAACyC,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;UACxB,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGJ,KAAK;UACvB,MAAMK,WAAW,GAAG,GAAG,CAAC,CAAC;;UAEzB;UACA,MAAMC,UAAU,GACbJ,CAAC,GAAGtC,KAAK,IAAK,CAAC,GAAGwC,CAAC,GAAGxC,KAAK,GAAGyC,WAAW,CAAC,GAAGvC,KAAK,GAAG,CAAC;UACzD,MAAMyC,UAAU,GACb,CAACJ,CAAC,GAAGvC,KAAK,IAAK,CAAC,GAAGwC,CAAC,GAAGxC,KAAK,GAAGyC,WAAW,CAAC,GAAGtC,MAAM,GAAG,CAAC;;UAE3D;UACA,MAAMyC,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAGJ,CAAC,GAAGxC,KAAK,GAAGyC,WAAW,CAAC,CAAC,CAAC,CAAC;;UAE1D,oBACElD,OAAA;YAEEsD,EAAE,EAAEH,UAAW;YACfI,EAAE,EAAEH,UAAW;YACfI,CAAC,EAAEH,MAAO;YACVI,IAAI,EAAC;UAAM,GAJNX,CAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKP,CAAC;QAEN,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzC,OAAA;MAAQ0D,OAAO,EAAEvC,YAAa;MAAAkB,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDzC,OAAA;MAAAqC,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9CzC,OAAA;MAAAqC,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9CzC,OAAA;MAAAqC,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9CzC,OAAA;MAAAqC,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9CzC,OAAA;MAAAqC,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9CzC,OAAA;MAAAqC,QAAA,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACvC,EAAA,CA9GID,sBAAsB;AAAA0D,EAAA,GAAtB1D,sBAAsB;AAgH5B,eAAeA,sBAAsB;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}