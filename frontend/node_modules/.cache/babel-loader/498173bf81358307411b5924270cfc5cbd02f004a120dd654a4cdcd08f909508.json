{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 500;\n  const height = 500;\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n  const generateRotationMatrix = (xRot, yRot, zRot) => {\n    const cos = Math.cos;\n    const sin = Math.sin;\n    const Rx = [[1, 0, 0], [0, cos(xRot), -sin(xRot)], [0, sin(xRot), cos(xRot)]];\n    const Ry = [[cos(yRot), 0, sin(yRot)], [0, 1, 0], [-sin(yRot), 0, cos(yRot)]];\n    const Rz = [[cos(zRot), -sin(zRot), 0], [sin(zRot), cos(zRot), 0], [0, 0, 1]];\n\n    // Combine rotations: R = Rz * Ry * Rx\n    return multiplyMatrices(multiplyMatrices(Rz, Ry), Rx);\n  };\n  const multiplyMatrices = (A, B) => {\n    const result = Array(3).fill(0).map(() => Array(3).fill(0));\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        for (let k = 0; k < 3; k++) {\n          result[i][j] += A[i][k] * B[k][j];\n        }\n      }\n    }\n    return result;\n  };\n  const applyRotationMatrix = (points, matrix) => {\n    return points.map(([x, y, z]) => [matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z, matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z, matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z]);\n  };\n  const handleRotations = (xRot, yRot, zRot, points) => {\n    const rotationMatrix = generateRotationMatrix(xRot, yRot, zRot);\n    return applyRotationMatrix(points, rotationMatrix);\n  };\n  const updateAxes = (xRot, yRot, zRot) => {\n    const rotationMatrix = generateRotationMatrix(xRot, yRot, zRot);\n    setXAxis(applyRotationMatrix(xAxis, rotationMatrix));\n    setYAxis(applyRotationMatrix(yAxis, rotationMatrix));\n    setZAxis(applyRotationMatrix(zAxis, rotationMatrix));\n  };\n  const handleWheel = e => {\n    const newScale = e.deltaY > 0 ? scale - 0.075 * Math.abs(e.deltaY) : scale + 0.075 * Math.abs(e.deltaY);\n    setScale(Math.max(1, newScale));\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      const [prevX, prevY] = currentCoords;\n      const deltaX = e.clientX - prevX;\n      const deltaY = e.clientY - prevY;\n      const rotationX = deltaY * 0.002; // Rotate around X-axis\n      const rotationY = -deltaX * 0.002; // Rotate around Y-axis\n\n      setPoints(handleRotations(rotationX, rotationY, 0, points));\n      updateAxes(rotationX, rotationY, 0);\n      setCurrentCoords([e.clientX, e.clientY]);\n    }\n  };\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [x * scale * cameraPos / (z * scale + cameraPos) + width / 2, -y * scale * cameraPos / (z * scale + cameraPos) + height / 2];\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [projectedX, projectedY] = projectPoint(point);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: 2,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 20\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [start, end] = axis;\n          const [x1, y1] = projectPoint(start);\n          const [x2, y2] = projectPoint(end);\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            stroke: ['red', 'green', 'blue'][index],\n            strokeWidth: 3\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"kua36ofeM4FKcI4p1tIt0Es1zPE=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","dragging","setDragging","currentCoords","setCurrentCoords","width","height","get","then","response","data","catch","console","generateRotationMatrix","xRot","yRot","zRot","cos","Math","sin","Rx","Ry","Rz","multiplyMatrices","A","B","result","Array","fill","map","i","j","k","applyRotationMatrix","matrix","x","y","z","handleRotations","rotationMatrix","updateAxes","handleWheel","e","newScale","deltaY","abs","max","handleMouseDown","clientX","clientY","handleMouseMove","prevX","prevY","deltaX","rotationX","rotationY","handleMouseUp","projectPoint","cameraPos","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","id","onMouseDown","onMouseMove","onMouseUp","onWheel","border","point","projectedX","projectedY","cx","cy","r","axis","index","start","end","x1","y1","x2","y2","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n\n  const width = 500;\n  const height = 500;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  const generateRotationMatrix = (xRot, yRot, zRot) => {\n    const cos = Math.cos;\n    const sin = Math.sin;\n\n    const Rx = [\n      [1, 0, 0],\n      [0, cos(xRot), -sin(xRot)],\n      [0, sin(xRot), cos(xRot)],\n    ];\n\n    const Ry = [\n      [cos(yRot), 0, sin(yRot)],\n      [0, 1, 0],\n      [-sin(yRot), 0, cos(yRot)],\n    ];\n\n    const Rz = [\n      [cos(zRot), -sin(zRot), 0],\n      [sin(zRot), cos(zRot), 0],\n      [0, 0, 1],\n    ];\n\n    // Combine rotations: R = Rz * Ry * Rx\n    return multiplyMatrices(multiplyMatrices(Rz, Ry), Rx);\n  };\n\n  const multiplyMatrices = (A, B) => {\n    const result = Array(3)\n      .fill(0)\n      .map(() => Array(3).fill(0));\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        for (let k = 0; k < 3; k++) {\n          result[i][j] += A[i][k] * B[k][j];\n        }\n      }\n    }\n    return result;\n  };\n\n  const applyRotationMatrix = (points, matrix) => {\n    return points.map(([x, y, z]) => [\n      matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z,\n      matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z,\n      matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z,\n    ]);\n  };\n\n  const handleRotations = (xRot, yRot, zRot, points) => {\n    const rotationMatrix = generateRotationMatrix(xRot, yRot, zRot);\n    return applyRotationMatrix(points, rotationMatrix);\n  };\n\n  const updateAxes = (xRot, yRot, zRot) => {\n    const rotationMatrix = generateRotationMatrix(xRot, yRot, zRot);\n    setXAxis(applyRotationMatrix(xAxis, rotationMatrix));\n    setYAxis(applyRotationMatrix(yAxis, rotationMatrix));\n    setZAxis(applyRotationMatrix(zAxis, rotationMatrix));\n  };\n\n  const handleWheel = (e) => {\n    const newScale =\n      e.deltaY > 0\n        ? scale - 0.075 * Math.abs(e.deltaY)\n        : scale + 0.075 * Math.abs(e.deltaY);\n\n    setScale(Math.max(1, newScale));\n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      const [prevX, prevY] = currentCoords;\n      const deltaX = e.clientX - prevX;\n      const deltaY = e.clientY - prevY;\n\n      const rotationX = deltaY * 0.002; // Rotate around X-axis\n      const rotationY = -deltaX * 0.002; // Rotate around Y-axis\n\n      setPoints(handleRotations(rotationX, rotationY, 0, points));\n      updateAxes(rotationX, rotationY, 0);\n\n      setCurrentCoords([e.clientX, e.clientY]);\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [\n      (x * scale * cameraPos) / (z * scale + cameraPos) + width / 2,\n      (-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2,\n    ];\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{ overflow: 'hidden' }}>\n      <h1>Visualization</h1>\n      <div\n        id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg\n          onWheel={handleWheel}\n          width={width}\n          height={height}\n          style={{ border: '1px solid black' }}\n        >\n          {points.map((point, i) => {\n            const [projectedX, projectedY] = projectPoint(point);\n            return <circle key={i} cx={projectedX} cy={projectedY} r={2} fill={colour} />;\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [start, end] = axis;\n            const [x1, y1] = projectPoint(start);\n            const [x2, y2] = projectPoint(end);\n\n            return (\n              <line\n                key={index}\n                x1={x1}\n                y1={y1}\n                x2={x2}\n                y2={y2}\n                stroke={['red', 'green', 'blue'][index]}\n                strokeWidth={3}\n              />\n            );\n          })}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}