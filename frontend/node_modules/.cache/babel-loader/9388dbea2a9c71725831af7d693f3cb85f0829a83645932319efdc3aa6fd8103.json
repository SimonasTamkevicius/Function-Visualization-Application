{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { throttle } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // Border variables\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]]);\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]]);\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]]);\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]]);\n\n  // Mouse drag state\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 1000;\n  const height = 1000;\n\n  // Fetch points from backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // Handle mouse down\n  const handleMouseDown = e => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  // Handle mouse up\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n\n  // Throttled handleMouseMove to optimize performance\n  let animationFrame;\n  const handleMouseMove = throttle(e => {\n    if (dragging) {\n      if (animationFrame) cancelAnimationFrame(animationFrame);\n      animationFrame = requestAnimationFrame(() => {\n        const coordDiff = [safeCoordDiff(e.clientX - currentCoords[0], 0.1),\n        // Horizontal movement\n        safeCoordDiff(e.clientY - currentCoords[1], 0.1) // Vertical movement\n        ];\n        const rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n\n        // Apply rotation to points and axes\n        const rotatedPoints = handleRotations(rotationX, points, theAxis);\n        const finalRotatedPoints = handleRotations(-rotationZ, rotatedPoints, zAxis);\n\n        // Update points and axes state\n        setPoints(finalRotatedPoints);\n        const xAxisRotated = handleRotations(rotationX, xAxis, theAxis);\n        setXAxis(handleRotations(-rotationZ, xAxisRotated, zAxis));\n        const yAxisRotated = handleRotations(rotationX, yAxis, theAxis);\n        setYAxis(handleRotations(-rotationZ, yAxisRotated, zAxis));\n        setZAxis(handleRotations(rotationX, zAxis, theAxis));\n\n        // Rotate borders\n        rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  }, 16); // Throttle at 60FPS\n\n  // Clean up throttle on unmount\n  useEffect(() => {\n    return () => {\n      handleMouseMove.cancel();\n    };\n  }, []);\n\n  // Function for unitizing a vector\n  const unitizeVector = v => {\n    const [x, y, z] = v;\n    const magnitude = Math.sqrt(x ** 2 + y ** 2 + z ** 2);\n    return [x / magnitude, y / magnitude, z / magnitude];\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n    return [[cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin], [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin], [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos]];\n  };\n\n  // Rotate points based on Rodrigues' rotation formula\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [axis[1][0] - axis[0][0], axis[1][1] - axis[0][1], axis[1][2] - axis[0][2]];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n    return points.map(point => {\n      return [0, 0, 0].map((_, i) => point.reduce((sum, _, j) => sum + R[i][j] * point[j], 0));\n    });\n  };\n\n  // Function to rotate borders\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const rotatedPosX = handleRotations(theta1, posXBorder, axis1);\n    const rotatedNegX = handleRotations(theta1, negXBorder, axis1);\n    const rotatedPosY = handleRotations(theta1, posYBorder, axis1);\n    const rotatedNegY = handleRotations(theta1, negYBorder, axis1);\n    setPosXBorder(handleRotations(theta2, rotatedPosX, axis2));\n    setNegXBorder(handleRotations(theta2, rotatedNegX, axis2));\n    setPosYBorder(handleRotations(theta2, rotatedPosY, axis2));\n    setNegYBorder(handleRotations(theta2, rotatedNegY, axis2));\n  };\n\n  // If loading or error, return loading or error message\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 21\n  }, this);\n\n  // Render SVG\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [x, y, z] = point;\n          const cameraPos = 500;\n          const [projectedX, projectedY] = projectPoint([x, y, z]);\n          const radius = safeRadius(z, scale, cameraPos);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 20\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [lineStart, lineEnd] = axis;\n          const [x1, y1] = projectPoint(lineStart);\n          const [x2, y2] = projectPoint(lineEnd);\n          const axes = [\"X\", \"Y\", \"Z\"];\n          const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: colours[index],\n              strokeWidth: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x1 - 5,\n              y: y1 - 2,\n              fontSize: scale / 2.5,\n              fontWeight: \"bold\",\n              style: {\n                userSelect: 'none'\n              },\n              children: axes[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(posXBorder[0])[0],\n          y1: projectPoint(posXBorder[0])[1],\n          x2: projectPoint(posXBorder[1])[0],\n          y2: projectPoint(posXBorder[1])[1],\n          stroke: \"#D6D6D6\",\n          strokeWidth: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"kjq96+DHak7wwrnCC/uJVP+Qn1s=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","throttle","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","posXBorder","setPosXBorder","negXBorder","setNegXBorder","posYBorder","setPosYBorder","negYBorder","setNegYBorder","dragging","setDragging","currentCoords","setCurrentCoords","width","height","get","then","response","data","catch","console","handleMouseDown","e","clientX","clientY","handleMouseUp","safeCoordDiff","value","minValue","Math","abs","animationFrame","handleMouseMove","cancelAnimationFrame","requestAnimationFrame","coordDiff","rotationX","min","max","rotationZ","theAxis","rotatedPoints","handleRotations","finalRotatedPoints","xAxisRotated","yAxisRotated","rotateBorders","cancel","unitizeVector","v","x","y","z","magnitude","sqrt","createRotationMatrix","ux","uy","uz","theta","cos","sin","oneMinusCos","axis","directionVector","R","map","point","_","i","reduce","sum","j","theta1","theta2","axis1","axis2","rotatedPosX","rotatedNegX","rotatedPosY","rotatedNegY","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","id","onMouseDown","onMouseMove","onMouseUp","onWheel","handleWheel","border","cameraPos","projectedX","projectedY","projectPoint","radius","safeRadius","cx","cy","r","fill","index","lineStart","lineEnd","x1","y1","x2","y2","axes","colours","stroke","strokeWidth","fontSize","fontWeight","userSelect","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { throttle } from 'lodash';\n\nconst VisualizationContainer = () => {\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // Border variables\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]]);\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]]);\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]]);\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]]);\n  \n  // Mouse drag state\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n\n  const width = 1000;\n  const height = 1000;\n\n  // Fetch points from backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // Handle mouse down\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  // Handle mouse up\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n\n  // Throttled handleMouseMove to optimize performance\n  let animationFrame;\n  const handleMouseMove = throttle((e) => {\n    if (dragging) {\n      if (animationFrame) cancelAnimationFrame(animationFrame);\n\n      animationFrame = requestAnimationFrame(() => {\n        const coordDiff = [\n          safeCoordDiff(e.clientX - currentCoords[0], 0.1), // Horizontal movement\n          safeCoordDiff(e.clientY - currentCoords[1], 0.1), // Vertical movement\n        ];\n\n        const rotationX = Math.min(0.02, Math.max(-0.02, coordDiff[1] * 0.001));\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n\n        // Apply rotation to points and axes\n        const rotatedPoints = handleRotations(rotationX, points, theAxis);\n        const finalRotatedPoints = handleRotations(-rotationZ, rotatedPoints, zAxis);\n\n        // Update points and axes state\n        setPoints(finalRotatedPoints);\n\n        const xAxisRotated = handleRotations(rotationX, xAxis, theAxis);\n        setXAxis(handleRotations(-rotationZ, xAxisRotated, zAxis));\n\n        const yAxisRotated = handleRotations(rotationX, yAxis, theAxis);\n        setYAxis(handleRotations(-rotationZ, yAxisRotated, zAxis));\n\n        setZAxis(handleRotations(rotationX, zAxis, theAxis));\n\n        // Rotate borders\n        rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n\n        setCurrentCoords([e.clientX, e.clientY]);\n      });\n    }\n  }, 16); // Throttle at 60FPS\n\n  // Clean up throttle on unmount\n  useEffect(() => {\n    return () => {\n      handleMouseMove.cancel();\n    };\n  }, []);\n\n  // Function for unitizing a vector\n  const unitizeVector = (v) => {\n    const [x, y, z] = v;\n    const magnitude = Math.sqrt(x ** 2 + y ** 2 + z ** 2);\n    return [x / magnitude, y / magnitude, z / magnitude];\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n\n    return [\n      [cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin],\n      [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin],\n      [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos],\n    ];\n  };\n\n  // Rotate points based on Rodrigues' rotation formula\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [axis[1][0] - axis[0][0], axis[1][1] - axis[0][1], axis[1][2] - axis[0][2]];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n\n    return points.map((point) => {\n      return [0, 0, 0].map((_, i) =>\n        point.reduce((sum, _, j) => sum + R[i][j] * point[j], 0)\n      );\n    });\n  };\n\n  // Function to rotate borders\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const rotatedPosX = handleRotations(theta1, posXBorder, axis1);\n    const rotatedNegX = handleRotations(theta1, negXBorder, axis1);\n    const rotatedPosY = handleRotations(theta1, posYBorder, axis1);\n    const rotatedNegY = handleRotations(theta1, negYBorder, axis1);\n\n    setPosXBorder(handleRotations(theta2, rotatedPosX, axis2));\n    setNegXBorder(handleRotations(theta2, rotatedNegX, axis2));\n    setPosYBorder(handleRotations(theta2, rotatedPosY, axis2));\n    setNegYBorder(handleRotations(theta2, rotatedNegY, axis2));\n  };\n\n  // If loading or error, return loading or error message\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  // Render SVG\n  return (\n    <div style={{ overflow: 'hidden' }}>\n      <h1>Visualization</h1>\n      <div\n        id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg onWheel={handleWheel} width={width} height={height} style={{ border: '1px solid black' }}>\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const cameraPos = 500;\n            const [projectedX, projectedY] = projectPoint([x, y, z]);\n            const radius = safeRadius(z, scale, cameraPos);\n\n            return <circle key={i} cx={projectedX} cy={projectedY} r={radius} fill={colour} />;\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [lineStart, lineEnd] = axis;\n            const [x1, y1] = projectPoint(lineStart);\n            const [x2, y2] = projectPoint(lineEnd);\n            const axes = [\"X\", \"Y\", \"Z\"];\n            const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n\n            return (\n              <g key={index}>\n                <line x1={x1} y1={y1} x2={x2} y2={y2} stroke={colours[index]} strokeWidth={3} />\n                <text x={x1 - 5} y={y1 - 2} fontSize={scale / 2.5} fontWeight=\"bold\" style={{ userSelect: 'none' }}>\n                  {axes[index]}\n                </text>\n              </g>\n            );\n          })}\n          <line\n            x1={projectPoint(posXBorder[0])[0]}\n            y1={projectPoint(posXBorder[0])[1]}\n            x2={projectPoint(posXBorder[1])[0]}\n            y2={projectPoint(posXBorder[1])[1]}\n            stroke=\"#D6D6D6\"\n            strokeWidth=\"3\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}