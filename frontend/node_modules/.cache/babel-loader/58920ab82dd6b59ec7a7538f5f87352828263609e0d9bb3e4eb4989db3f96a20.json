{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const [rotation, setRotation] = useState({\n    x: 0,\n    z: 0\n  });\n  const width = 1000;\n  const height = 1000;\n\n  // Fetch points from the backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // Mouse down starts the dragging process\n  const handleMouseDown = e => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  // Mouse move updates the rotation\n  const handleMouseMove = e => {\n    if (!dragging) return;\n    const newCoords = [e.clientX, e.clientY];\n    const coordDiff = [newCoords[0] - currentCoords[0],\n    // Horizontal movement\n    newCoords[1] - currentCoords[1] // Vertical movement\n    ];\n\n    // Update the current mouse coordinates\n    setCurrentCoords(newCoords);\n\n    // Update rotation based on mouse movement\n    const rotationX = coordDiff[1] * 0.005; // Adjust the factor for sensitivity\n    const rotationZ = coordDiff[0] * 0.005; // Adjust the factor for sensitivity\n\n    // Apply the rotations\n    setRotation(prevRotation => ({\n      x: prevRotation.x + rotationX,\n      z: prevRotation.z + rotationZ\n    }));\n  };\n\n  // Mouse up stops the dragging process\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  // Rotation logic for points\n  const handleRotations = (theta, points, axis) => {\n    // Same logic for rotating points as before\n    const directionVector = [axis[1][0] - axis[0][0], axis[1][1] - axis[0][1], axis[1][2] - axis[0][2]];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n    return points.map(point => {\n      const rotated = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          rotated[i] += R[i][j] * point[j];\n        }\n      }\n      return rotated;\n    });\n  };\n\n  // Point projection logic\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [x * scale * cameraPos / (z * scale + cameraPos) + width / 2, -y * scale * cameraPos / (z * scale + cameraPos) + height / 2];\n  };\n\n  // Update the points when rotation changes\n  const rotatedPoints = handleRotations(rotation.x, points, xAxis);\n  const rotatedXAxis = handleRotations(rotation.x, xAxis, xAxis);\n  const rotatedYAxis = handleRotations(rotation.x, yAxis, xAxis);\n  const rotatedZAxis = handleRotations(rotation.x, zAxis, xAxis);\n  const rotatedPointsZ = handleRotations(rotation.z, rotatedPoints, zAxis);\n  const rotatedXAxisZ = handleRotations(rotation.z, rotatedXAxis, zAxis);\n  const rotatedYAxisZ = handleRotations(rotation.z, rotatedYAxis, zAxis);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    options: {\n      passive: false\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [rotatedPointsZ.map((point, i) => {\n          const [x, y, z] = point;\n          const cameraPos = 500;\n          const [projectedX, projectedY] = projectPoint([x, y, z]);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: safeRadius(z, scale, cameraPos),\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this);\n        }), [rotatedXAxisZ, rotatedYAxisZ, rotatedZAxis].map((axis, index) => {\n          const [lineStart, lineEnd] = axis;\n          const [x1, y1] = projectPoint(lineStart);\n          const [x2, y2] = projectPoint(lineEnd);\n          const axes = [\"X\", \"Y\", \"Z\"];\n          const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: colours[index],\n              strokeWidth: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x1 - 5,\n              y: y1 - 2,\n              fontSize: scale / 2.5,\n              fill: \"#333333\",\n              fontWeight: \"bold\",\n              style: {\n                userSelect: \"none\"\n              },\n              children: axes[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"oTNynSm+6UBJPHngOELL5HM/x6c=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","dragging","setDragging","currentCoords","setCurrentCoords","rotation","setRotation","x","z","width","height","get","then","response","data","catch","console","handleMouseDown","e","clientX","clientY","handleMouseMove","newCoords","coordDiff","rotationX","rotationZ","prevRotation","handleMouseUp","handleRotations","theta","axis","directionVector","ux","uy","uz","unitizeVector","R","createRotationMatrix","map","point","rotated","i","j","projectPoint","y","cameraPos","rotatedPoints","rotatedXAxis","rotatedYAxis","rotatedZAxis","rotatedPointsZ","rotatedXAxisZ","rotatedYAxisZ","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","options","passive","id","onMouseDown","onMouseMove","onMouseUp","border","projectedX","projectedY","cx","cy","r","safeRadius","fill","index","lineStart","lineEnd","x1","y1","x2","y2","axes","colours","stroke","strokeWidth","fontSize","fontWeight","userSelect","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const [rotation, setRotation] = useState({ x: 0, z: 0 });\n\n  const width = 1000;\n  const height = 1000;\n\n  // Fetch points from the backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // Mouse down starts the dragging process\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  // Mouse move updates the rotation\n  const handleMouseMove = (e) => {\n    if (!dragging) return;\n\n    const newCoords = [e.clientX, e.clientY];\n    const coordDiff = [\n      newCoords[0] - currentCoords[0],  // Horizontal movement\n      newCoords[1] - currentCoords[1],  // Vertical movement\n    ];\n\n    // Update the current mouse coordinates\n    setCurrentCoords(newCoords);\n\n    // Update rotation based on mouse movement\n    const rotationX = coordDiff[1] * 0.005;  // Adjust the factor for sensitivity\n    const rotationZ = coordDiff[0] * 0.005;  // Adjust the factor for sensitivity\n\n    // Apply the rotations\n    setRotation((prevRotation) => ({\n      x: prevRotation.x + rotationX,\n      z: prevRotation.z + rotationZ,\n    }));\n  };\n\n  // Mouse up stops the dragging process\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  // Rotation logic for points\n  const handleRotations = (theta, points, axis) => {\n    // Same logic for rotating points as before\n    const directionVector = [\n      axis[1][0] - axis[0][0],\n      axis[1][1] - axis[0][1],\n      axis[1][2] - axis[0][2],\n    ];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n\n    return points.map(point => {\n      const rotated = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          rotated[i] += R[i][j] * point[j];\n        }\n      }\n      return rotated;\n    });\n  };\n\n  // Point projection logic\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [\n      (x * scale * cameraPos) / (z * scale + cameraPos) + width / 2,\n      (-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2,\n    ];\n  };\n\n  // Update the points when rotation changes\n  const rotatedPoints = handleRotations(rotation.x, points, xAxis);\n  const rotatedXAxis = handleRotations(rotation.x, xAxis, xAxis);\n  const rotatedYAxis = handleRotations(rotation.x, yAxis, xAxis);\n  const rotatedZAxis = handleRotations(rotation.x, zAxis, xAxis);\n\n  const rotatedPointsZ = handleRotations(rotation.z, rotatedPoints, zAxis);\n  const rotatedXAxisZ = handleRotations(rotation.z, rotatedXAxis, zAxis);\n  const rotatedYAxisZ = handleRotations(rotation.z, rotatedYAxis, zAxis);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{overflow: 'hidden'}} options={{ passive: false }}>\n      <h1>Visualization</h1>\n      <div id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg\n          width={width}\n          height={height}\n          style={{ border: '1px solid black' }}\n        >\n          {rotatedPointsZ.map((point, i) => {\n            const [x, y, z] = point;\n            const cameraPos = 500\n            const [projectedX, projectedY] = projectPoint([x, y, z]);\n\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={safeRadius(z, scale, cameraPos)}\n                fill={colour}\n              />\n            );\n          })}\n          {[rotatedXAxisZ, rotatedYAxisZ, rotatedZAxis].map((axis, index) => {\n            const [lineStart, lineEnd] = axis;\n            const [x1, y1] = projectPoint(lineStart);\n            const [x2, y2] = projectPoint(lineEnd);\n            const axes = [\"X\", \"Y\", \"Z\"];\n            const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n\n            return (\n              <g key={index}>\n                <line\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke={colours[index]}\n                  strokeWidth={3}\n                />\n                <text x={x1 - 5} y={y1 - 2} fontSize={scale / 2.5} fill=\"#333333\" fontWeight=\"bold\" style={{ userSelect: \"none\" }}>{axes[index]}</text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}