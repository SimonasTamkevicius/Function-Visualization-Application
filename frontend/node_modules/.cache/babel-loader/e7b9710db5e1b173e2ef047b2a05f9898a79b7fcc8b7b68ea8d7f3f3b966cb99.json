{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { debounce, throttle } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // XY border lines\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]]);\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]]);\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]]);\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]]);\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 1000;\n  const height = 1000;\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // Allows for scroll to zoom in or out\n  const handleWheel = e => {\n    const {\n      deltaY\n    } = e;\n    const newScale = deltaY > 0 ? scale - 0.075 * Math.abs(deltaY) : scale + 0.075 * Math.abs(deltaY);\n    if (newScale >= 30 && newScale <= 140) {\n      setScale(newScale);\n    }\n  };\n\n  // Function to unitize a vector\n  const unitizeVector = v => {\n    const magnitude = Math.sqrt(v.reduce((sum, comp) => sum + comp ** 2, 0));\n    return v.map(comp => comp / magnitude);\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n    return [[cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin], [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin], [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos]];\n  };\n\n  // Point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = axis[1].map((val, i) => val - axis[0][i]);\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n    return points.map(point => {\n      return R.map(row => row.reduce((sum, r, i) => sum + r * point[i], 0)).map(coord => parseFloat(coord.toFixed(3)));\n    });\n  };\n\n  // Starts coordinate capture on mouse down\n  const handleMouseDown = e => {\n    setCurrentCoords([e.clientX, e.clientY]);\n    setDragging(true);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n  const handleMouseMove = throttle(e => {\n    if (!dragging) return;\n    const newCoords = [e.clientX, e.clientY];\n    const coordDiff = [safeCoordDiff(newCoords[0] - currentCoords[0], 0.005), safeCoordDiff(newCoords[1] - currentCoords[1], 0.005)];\n    setCurrentCoords(newCoords);\n    const theAxis = [[1, 0, 0], [-1, 0, 0]];\n    const rotationX = Math.min(0.75, Math.max(-0.75, coordDiff[1] * 0.005));\n    const rotationZ = Math.min(0.75, Math.max(-0.75, coordDiff[0] * 0.005));\n    if (rotationZ < 0) {\n      setPoints(prevPoints => handleRotations(rotationX, handleRotations(rotationZ, prevPoints, zAxis), theAxis));\n      setXAxis(prevXAxis => handleRotations(rotationX, handleRotations(rotationZ, prevXAxis, zAxis), theAxis));\n      setYAxis(prevYAxis => handleRotations(rotationX, handleRotations(rotationZ, prevYAxis, zAxis), theAxis));\n    } else {\n      setPoints(prevPoints => handleRotations(rotationX, handleRotations(rotationZ, prevPoints, zAxis), theAxis));\n      setXAxis(prevXAxis => handleRotations(rotationX, handleRotations(rotationZ, prevXAxis, zAxis), theAxis));\n      setYAxis(prevYAxis => handleRotations(rotationX, handleRotations(rotationZ, prevYAxis, zAxis), theAxis));\n    }\n    setZAxis(prevZAxis => handleRotations(rotationX, prevZAxis, theAxis));\n\n    // rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n  }, 100);\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const posXRotation = handleRotations(theta1, posXBorder, axis1);\n    const negXRotation = handleRotations(theta1, negXBorder, axis1);\n    const posYRotation = handleRotations(theta1, posYBorder, axis1);\n    const negYRotation = handleRotations(theta1, negYBorder, axis1);\n\n    // Round the rotated coordinates to 3 significant digits\n    const roundCoords = coords => coords.map(coord => coord.map(c => parseFloat(c.toFixed(3))));\n    setPosXBorder(roundCoords(handleRotations(theta2, posXRotation, axis2)));\n    setNegXBorder(roundCoords(handleRotations(theta2, negXRotation, axis2)));\n    setPosYBorder(roundCoords(handleRotations(theta2, posYRotation, axis2)));\n    setNegYBorder(roundCoords(handleRotations(theta2, negYRotation, axis2)));\n  };\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n    return denominator <= 0.2 ? 0 : parseFloat((1.5 / denominator).toFixed(3));\n  };\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [parseFloat((x * scale * cameraPos / (z * scale + cameraPos) + width / 2).toFixed(3)), parseFloat((-y * scale * cameraPos / (z * scale + cameraPos) + height / 2).toFixed(3))];\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    options: {\n      passive: false\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [x, y, z] = point;\n          const cameraPos = 500;\n          const [projectedX, projectedY] = projectPoint([x, y, z]);\n          const radius = safeRadius(z, scale, cameraPos);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [lineStart, lineEnd] = axis;\n          const [x1, y1] = projectPoint(lineStart);\n          const [x2, y2] = projectPoint(lineEnd);\n          const axes = [\"X\", \"Y\", \"Z\"];\n          const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: colours[index],\n              strokeWidth: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x1 - 5,\n              y: y1 - 2,\n              fontSize: scale / 2.5,\n              fill: \"#333333\",\n              fontWeight: \"bold\",\n              style: {\n                userSelect: \"none\"\n              },\n              children: axes[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"HNfR1hUJ+gU/jhXw8kafptdUBPY=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","debounce","throttle","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","posXBorder","setPosXBorder","negXBorder","setNegXBorder","posYBorder","setPosYBorder","negYBorder","setNegYBorder","dragging","setDragging","currentCoords","setCurrentCoords","width","height","get","then","response","data","catch","console","handleWheel","e","deltaY","newScale","Math","abs","unitizeVector","v","magnitude","sqrt","reduce","sum","comp","map","createRotationMatrix","ux","uy","uz","theta","cos","sin","oneMinusCos","handleRotations","axis","directionVector","val","i","R","point","row","r","coord","parseFloat","toFixed","handleMouseDown","clientX","clientY","safeCoordDiff","value","minValue","handleMouseMove","newCoords","coordDiff","theAxis","rotationX","min","max","rotationZ","prevPoints","prevXAxis","prevYAxis","prevZAxis","rotateBorders","theta1","theta2","axis1","axis2","posXRotation","negXRotation","posYRotation","negYRotation","roundCoords","coords","c","handleMouseUp","safeRadius","z","cameraPos","denominator","projectPoint","x","y","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","options","passive","id","onMouseDown","onMouseMove","onMouseUp","onWheel","border","projectedX","projectedY","radius","cx","cy","fill","index","lineStart","lineEnd","x1","y1","x2","y2","axes","colours","stroke","strokeWidth","fontSize","fontWeight","userSelect","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { debounce, throttle } from 'lodash';\n\nconst VisualizationContainer = () => {\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // XY border lines\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]]);\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]]);\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]]);\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]]);\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n\n  const width = 1000;\n  const height = 1000;\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // Allows for scroll to zoom in or out\n  const handleWheel = (e) => {\n    const { deltaY } = e;\n    const newScale =\n      deltaY > 0\n        ? scale - 0.075 * Math.abs(deltaY)\n        : scale + 0.075 * Math.abs(deltaY);\n\n    if (newScale >= 30 && newScale <= 140) {\n      setScale(newScale);\n    }\n  };\n\n  // Function to unitize a vector\n  const unitizeVector = (v) => {\n    const magnitude = Math.sqrt(v.reduce((sum, comp) => sum + comp ** 2, 0));\n    return v.map((comp) => comp / magnitude);\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n\n    return [\n      [cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin],\n      [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin],\n      [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos],\n    ];\n  };\n\n  // Point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = axis[1].map((val, i) => val - axis[0][i]);\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n\n    return points.map((point) => {\n      return R.map((row) => row.reduce((sum, r, i) => sum + r * point[i], 0)).map((coord) => parseFloat(coord.toFixed(3)));\n    });\n  };\n\n  // Starts coordinate capture on mouse down\n  const handleMouseDown = (e) => {\n    setCurrentCoords([e.clientX, e.clientY]);\n    setDragging(true);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => (Math.abs(value) < minValue ? minValue : value);\n\n  const handleMouseMove = throttle((e) => {\n    if (!dragging) return;\n\n    const newCoords = [e.clientX, e.clientY];\n    const coordDiff = [\n      safeCoordDiff(newCoords[0] - currentCoords[0], 0.005),\n      safeCoordDiff(newCoords[1] - currentCoords[1], 0.005),\n    ];\n\n    setCurrentCoords(newCoords);\n\n    const theAxis = [[1, 0, 0], [-1, 0, 0]];\n    const rotationX = Math.min(0.75, Math.max(-0.75, coordDiff[1] * 0.005));\n    const rotationZ = Math.min(0.75, Math.max(-0.75, coordDiff[0] * 0.005));\n\n    if (rotationZ < 0) {\n      setPoints((prevPoints) => handleRotations(rotationX, handleRotations(rotationZ, prevPoints, zAxis), theAxis));\n      setXAxis((prevXAxis) => handleRotations(rotationX, handleRotations(rotationZ, prevXAxis, zAxis), theAxis));\n      setYAxis((prevYAxis) => handleRotations(rotationX, handleRotations(rotationZ, prevYAxis, zAxis), theAxis));\n    } else {\n      setPoints((prevPoints) => handleRotations(rotationX, handleRotations(rotationZ, prevPoints, zAxis), theAxis));\n    setXAxis((prevXAxis) => handleRotations(rotationX, handleRotations(rotationZ, prevXAxis, zAxis), theAxis));\n    setYAxis((prevYAxis) => handleRotations(rotationX, handleRotations(rotationZ, prevYAxis, zAxis), theAxis));\n    }\n    setZAxis((prevZAxis) => handleRotations(rotationX, prevZAxis, theAxis));\n\n    // rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n  }, 100);\n\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const posXRotation = handleRotations(theta1, posXBorder, axis1);\n    const negXRotation = handleRotations(theta1, negXBorder, axis1);\n    const posYRotation = handleRotations(theta1, posYBorder, axis1);\n    const negYRotation = handleRotations(theta1, negYBorder, axis1);\n  \n    // Round the rotated coordinates to 3 significant digits\n    const roundCoords = (coords) => coords.map((coord) => coord.map((c) => parseFloat(c.toFixed(3))));\n  \n    setPosXBorder(roundCoords(handleRotations(theta2, posXRotation, axis2)));\n    setNegXBorder(roundCoords(handleRotations(theta2, negXRotation, axis2)));\n    setPosYBorder(roundCoords(handleRotations(theta2, posYRotation, axis2)));\n    setNegYBorder(roundCoords(handleRotations(theta2, negYRotation, axis2)));\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + (z * scale) / cameraPos;\n    return denominator <= 0.2 ? 0 : parseFloat((1.5 / denominator).toFixed(3));\n  };\n\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [\n      parseFloat(((x * scale * cameraPos) / (z * scale + cameraPos) + width / 2).toFixed(3)),\n      parseFloat(((-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2).toFixed(3)),\n    ];\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{overflow: 'hidden'}} options={{ passive: false }}>\n      <h1>Visualization</h1>\n      <div id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg\n          onWheel={handleWheel}\n          width={width}\n          height={height}\n          style={{ border: '1px solid black' }}\n        >\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const cameraPos = 500\n            \n            const [projectedX, projectedY] = projectPoint([x, y, z])\n\n            const radius = safeRadius(z, scale, cameraPos);\n\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={radius}\n                fill={colour}\n              />\n            );\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [lineStart, lineEnd] = axis;\n            const [x1, y1] = projectPoint(lineStart);\n            const [x2, y2] = projectPoint(lineEnd);\n            const axes = [\"X\", \"Y\", \"Z\"]\n            const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"]\n\n            return (\n              <g key={index}>\n                <line\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke={colours[index]}\n                  strokeWidth={3}\n                />\n                <text x={x1 - 5} y={y1 - 2} fontSize={scale / 2.5} fill=\"#333333\" fontWeight=\"bold\" style={{ userSelect: \"none\" }}>{axes[index]}</text>\n              </g>\n            )\n          })}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}