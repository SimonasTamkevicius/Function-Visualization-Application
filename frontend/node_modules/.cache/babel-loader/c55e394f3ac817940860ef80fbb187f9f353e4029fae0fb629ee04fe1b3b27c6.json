{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { throttle } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // XY border lines\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]]);\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]]);\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]]);\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]]);\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 1000;\n  const height = 1000;\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // Function to unitize a vector\n  const unitizeVector = v => {\n    const [x, y, z] = v;\n    const magnitude = Math.sqrt(x ** 2 + y ** 2 + z ** 2);\n    return [x / magnitude, y / magnitude, z / magnitude];\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n    return [[cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin], [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin], [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos]];\n  };\n\n  // Point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [axis[1][0] - axis[0][0], axis[1][1] - axis[0][1], axis[1][2] - axis[0][2]];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n    return points.map(point => {\n      const rotated = [+(R[0][0] * point[0] + R[0][1] * point[1] + R[0][2] * point[2]).toFixed(6), +(R[1][0] * point[0] + R[1][1] * point[1] + R[1][2] * point[2]).toFixed(6), +(R[2][0] * point[0] + R[2][1] * point[1] + R[2][2] * point[2]).toFixed(6)];\n      return rotated;\n    });\n  };\n\n  // Starts coordinate capture on mouse down\n  const handleMouseDown = e => {\n    setCurrentCoords([e.clientX, e.clientY]);\n    setDragging(true);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n\n  // Handle mouse movement for rotation\n  const handleMouseMove = throttle(e => {\n    if (!dragging) return;\n    const newCoords = [e.clientX, e.clientY];\n    const coordDiff = [safeCoordDiff(newCoords[0] - currentCoords[0], 0.005),\n    // Horizontal movement\n    safeCoordDiff(newCoords[1] - currentCoords[1], 0.005) // Vertical movement\n    ];\n\n    // Update current coordinates\n    setCurrentCoords(newCoords);\n    const theAxis = [[1, 0, 0], [-1, 0, 0]];\n    const rotationX = Math.min(0.75, Math.max(-0.75, coordDiff[1] * 0.005));\n    const rotationZ = Math.min(0.75, Math.max(-0.75, coordDiff[0] * 0.005));\n    const updatedPointsX = handleRotations(rotationX, points, theAxis);\n    const fullyUpdatedPoints = handleRotations(-rotationZ, updatedPointsX, zAxis);\n    setPoints(fullyUpdatedPoints);\n    const updatedXAxisX = handleRotations(rotationX, xAxis, theAxis);\n    const fullyUpdatedXAxis = handleRotations(-rotationZ, updatedXAxisX, zAxis);\n    setXAxis(fullyUpdatedXAxis);\n    const updatedYAxisX = handleRotations(rotationX, yAxis, theAxis);\n    const fullyUpdatedYAxis = handleRotations(-rotationZ, updatedYAxisX, zAxis);\n    setYAxis(fullyUpdatedYAxis);\n    const updatedZAxis = handleRotations(rotationX, zAxis, theAxis);\n    setZAxis(updatedZAxis);\n    rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n  }, 100);\n  const handleMouseUp = () => setDragging(false);\n\n  // Rotate borders along specified axes\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const posXRotation = handleRotations(theta1, posXBorder, axis1);\n    const negXRotation = handleRotations(theta1, negXBorder, axis1);\n    const posYRotation = handleRotations(theta1, posYBorder, axis1);\n    const negYRotation = handleRotations(theta1, negYBorder, axis1);\n    setPosXBorder(handleRotations(theta2, posXRotation, axis2));\n    setNegXBorder(handleRotations(theta2, negXRotation, axis2));\n    setPosYBorder(handleRotations(theta2, posYRotation, axis2));\n    setNegYBorder(handleRotations(theta2, negYRotation, axis2));\n  };\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n    return denominator <= 0.2 ? 0 : +(1.5 * (1 / denominator)).toFixed(6);\n  };\n  const projectPoint = ([x, y, z], cameraPos = 1000) => [+(x * scale * cameraPos / (z * scale + cameraPos) + width / 2).toFixed(6), +(-y * scale * cameraPos / (z * scale + cameraPos) + height / 2).toFixed(6)];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    options: {\n      passive: false\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [x, y, z] = point;\n          const cameraPos = 500;\n          const [projectedX, projectedY] = projectPoint([x, y, z]);\n          const radius = safeRadius(z, scale, cameraPos);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [lineStart, lineEnd] = axis;\n          const [x1, y1] = projectPoint(lineStart);\n          const [x2, y2] = projectPoint(lineEnd);\n          const axes = [\"X\", \"Y\", \"Z\"];\n          const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: colours[index],\n              strokeWidth: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x1 - 5,\n              y: y1 - 2,\n              fontSize: scale / 2.5,\n              fill: \"#333333\",\n              fontWeight: \"bold\",\n              style: {\n                userSelect: \"none\"\n              },\n              children: axes[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(posXBorder[0])[0],\n          y1: projectPoint(posXBorder[0])[1],\n          x2: projectPoint(posXBorder[1])[0],\n          y2: projectPoint(posXBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(negXBorder[0])[0],\n          y1: projectPoint(negXBorder[0])[1],\n          x2: projectPoint(negXBorder[1])[0],\n          y2: projectPoint(negXBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(posYBorder[0])[0],\n          y1: projectPoint(posYBorder[0])[1],\n          x2: projectPoint(posYBorder[1])[0],\n          y2: projectPoint(posYBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(negYBorder[0])[0],\n          y1: projectPoint(negYBorder[0])[1],\n          x2: projectPoint(negYBorder[1])[0],\n          y2: projectPoint(negYBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"HNfR1hUJ+gU/jhXw8kafptdUBPY=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\n\n// Allows for scroll to zoom in or out\nconst handleWheel = e => {\n  const {\n    deltaY\n  } = e;\n  const newScale = deltaY > 0 ? scale - 0.075 * Math.abs(deltaY) : scale + 0.075 * Math.abs(deltaY);\n  if (newScale >= 30 && newScale <= 140) {\n    setScale(newScale);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","throttle","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","posXBorder","setPosXBorder","negXBorder","setNegXBorder","posYBorder","setPosYBorder","negYBorder","setNegYBorder","dragging","setDragging","currentCoords","setCurrentCoords","width","height","get","then","response","data","catch","console","unitizeVector","v","x","y","z","magnitude","Math","sqrt","createRotationMatrix","ux","uy","uz","theta","cos","sin","oneMinusCos","handleRotations","axis","directionVector","R","map","point","rotated","toFixed","handleMouseDown","e","clientX","clientY","safeCoordDiff","value","minValue","abs","handleMouseMove","newCoords","coordDiff","theAxis","rotationX","min","max","rotationZ","updatedPointsX","fullyUpdatedPoints","updatedXAxisX","fullyUpdatedXAxis","updatedYAxisX","fullyUpdatedYAxis","updatedZAxis","rotateBorders","handleMouseUp","theta1","theta2","axis1","axis2","posXRotation","negXRotation","posYRotation","negYRotation","safeRadius","cameraPos","denominator","projectPoint","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","options","passive","id","onMouseDown","onMouseMove","onMouseUp","onWheel","handleWheel","border","i","projectedX","projectedY","radius","cx","cy","r","fill","index","lineStart","lineEnd","x1","y1","x2","y2","axes","colours","stroke","strokeWidth","fontSize","fontWeight","userSelect","_c","deltaY","newScale","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { throttle } from 'lodash';\n\nconst VisualizationContainer = () => {\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // XY border lines\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]]);\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]]);\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]]);\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]]);\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n\n  const width = 1000;\n  const height = 1000;\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // Function to unitize a vector\n  const unitizeVector = (v) => {\n    const [x, y, z] = v;\n    const magnitude = Math.sqrt(x ** 2 + y ** 2 + z ** 2);\n    return [x / magnitude, y / magnitude, z / magnitude];\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n\n    return [\n      [cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin],\n      [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin],\n      [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos],\n    ];\n  };\n\n  // Point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [\n      axis[1][0] - axis[0][0],\n      axis[1][1] - axis[0][1],\n      axis[1][2] - axis[0][2],\n    ];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n\n    return points.map((point) => {\n      const rotated = [\n        +(R[0][0] * point[0] + R[0][1] * point[1] + R[0][2] * point[2]).toFixed(6),\n        +(R[1][0] * point[0] + R[1][1] * point[1] + R[1][2] * point[2]).toFixed(6),\n        +(R[2][0] * point[0] + R[2][1] * point[1] + R[2][2] * point[2]).toFixed(6),\n      ];\n      return rotated;\n    });\n  };\n\n  // Starts coordinate capture on mouse down\n  const handleMouseDown = (e) => {\n    setCurrentCoords([e.clientX, e.clientY]);\n    setDragging(true);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => (Math.abs(value) < minValue ? minValue : value);\n\n  // Handle mouse movement for rotation\n  const handleMouseMove = throttle((e) => {\n    if (!dragging) return;\n\n    const newCoords = [e.clientX, e.clientY];\n    const coordDiff = [\n      safeCoordDiff(newCoords[0] - currentCoords[0], 0.005), // Horizontal movement\n      safeCoordDiff(newCoords[1] - currentCoords[1], 0.005), // Vertical movement\n    ];\n\n    // Update current coordinates\n    setCurrentCoords(newCoords);\n\n    const theAxis = [[1, 0, 0], [-1, 0, 0]];\n    const rotationX = Math.min(0.75, Math.max(-0.75, coordDiff[1] * 0.005));\n    const rotationZ = Math.min(0.75, Math.max(-0.75, coordDiff[0] * 0.005));\n\n    const updatedPointsX = handleRotations(rotationX, points, theAxis);\n    const fullyUpdatedPoints = handleRotations(-rotationZ, updatedPointsX, zAxis);\n    setPoints(fullyUpdatedPoints);\n\n    const updatedXAxisX = handleRotations(rotationX, xAxis, theAxis);\n    const fullyUpdatedXAxis = handleRotations(-rotationZ, updatedXAxisX, zAxis);\n    setXAxis(fullyUpdatedXAxis);\n\n    const updatedYAxisX = handleRotations(rotationX, yAxis, theAxis);\n    const fullyUpdatedYAxis = handleRotations(-rotationZ, updatedYAxisX, zAxis);\n    setYAxis(fullyUpdatedYAxis);\n\n    const updatedZAxis = handleRotations(rotationX, zAxis, theAxis);\n    setZAxis(updatedZAxis);\n\n    rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n  }, 100);\n\n  const handleMouseUp = () => setDragging(false);\n\n  // Rotate borders along specified axes\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const posXRotation = handleRotations(theta1, posXBorder, axis1);\n    const negXRotation = handleRotations(theta1, negXBorder, axis1);\n    const posYRotation = handleRotations(theta1, posYBorder, axis1);\n    const negYRotation = handleRotations(theta1, negYBorder, axis1);\n\n    setPosXBorder(handleRotations(theta2, posXRotation, axis2));\n    setNegXBorder(handleRotations(theta2, negXRotation, axis2));\n    setPosYBorder(handleRotations(theta2, posYRotation, axis2));\n    setNegYBorder(handleRotations(theta2, negYRotation, axis2));\n  };\n\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + (z * scale) / cameraPos;\n    return denominator <= 0.2 ? 0 : +(1.5 * (1 / denominator)).toFixed(6);\n  };\n\n  const projectPoint = ([x, y, z], cameraPos = 1000) => [\n    +((x * scale * cameraPos) / (z * scale + cameraPos) + width / 2).toFixed(6),\n    +((-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2).toFixed(6),\n  ];\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{overflow: 'hidden'}} options={{ passive: false }}>\n      <h1>Visualization</h1>\n      <div id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg\n          onWheel={handleWheel}\n          width={width}\n          height={height}\n          style={{ border: '1px solid black' }}\n        >\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const cameraPos = 500\n            \n            const [projectedX, projectedY] = projectPoint([x, y, z])\n\n            const radius = safeRadius(z, scale, cameraPos);\n\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={radius}\n                fill={colour}\n              />\n            );\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [lineStart, lineEnd] = axis;\n            const [x1, y1] = projectPoint(lineStart);\n            const [x2, y2] = projectPoint(lineEnd);\n            const axes = [\"X\", \"Y\", \"Z\"]\n            const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"]\n\n            return (\n              <g key={index}>\n                <line\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke={colours[index]}\n                  strokeWidth={3}\n                />\n                <text x={x1 - 5} y={y1 - 2} fontSize={scale / 2.5} fill=\"#333333\" fontWeight=\"bold\" style={{ userSelect: \"none\" }}>{axes[index]}</text>\n              </g>\n            )\n          })}\n          <line\n            x1={projectPoint(posXBorder[0])[0]}\n            y1={projectPoint(posXBorder[0])[1]}\n            x2={projectPoint(posXBorder[1])[0]}\n            y2={projectPoint(posXBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n          <line\n            x1={projectPoint(negXBorder[0])[0]}\n            y1={projectPoint(negXBorder[0])[1]}\n            x2={projectPoint(negXBorder[1])[0]}\n            y2={projectPoint(negXBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n          <line\n            x1={projectPoint(posYBorder[0])[0]}\n            y1={projectPoint(posYBorder[0])[1]}\n            x2={projectPoint(posYBorder[1])[0]}\n            y2={projectPoint(posYBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n          <line\n            x1={projectPoint(negYBorder[0])[0]}\n            y1={projectPoint(negYBorder[0])[1]}\n            x2={projectPoint(negYBorder[1])[0]}\n            y2={projectPoint(negYBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n\n\n  // Allows for scroll to zoom in or out\n  const handleWheel = (e) => {\n    const { deltaY } = e;\n    const newScale =\n      deltaY > 0\n        ? scale - 0.075 * Math.abs(deltaY)\n        : scale + 0.075 * Math.abs(deltaY);\n\n    if (newScale >= 30 && newScale <= 140) {\n      setScale(newScale);\n    }\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}