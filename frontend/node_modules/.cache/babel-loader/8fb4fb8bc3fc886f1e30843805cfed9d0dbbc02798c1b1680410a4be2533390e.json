{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { debounce, throttle } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  // general variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // function display variables\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // xy border lines\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]]);\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]]);\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]]);\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]]);\n  // future xy border improvement\n  // const xyBorder = [[3.5, 3.5, 0], [3.5, -3.5, 0], [-3.5, 3.5, 0], [-3.5, -3.5, 0], [3.5, 3.5, 0], [-3.5, 3.5, 0], [3.5, -3.5, 0], [-3.5, -3.5, 0]]\n\n  // containing cube\n  // const \n\n  // function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 1000;\n  const height = 1000;\n\n  // retrieve the calculated points from the backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // soon to be deprecated handles rotations manually with button clicks\n  const handleClick = e => {\n    if (points.length > 0) {\n      const typeOfRot = e.target.value;\n      if (typeOfRot === \"x\") {\n        setPoints(handleRotations(.12, points, xAxis));\n        setYAxis(handleRotations(.12, yAxis, xAxis));\n        setZAxis(handleRotations(.12, zAxis, xAxis));\n      } else if (typeOfRot === \"y\") {\n        setPoints(handleRotations(.12, points, yAxis));\n        setXAxis(handleRotations(.12, xAxis, yAxis));\n        setZAxis(handleRotations(.12, zAxis, yAxis));\n      } else {\n        setPoints(handleRotations(.12, points, zAxis));\n        setXAxis(handleRotations(.12, xAxis, zAxis));\n        setYAxis(handleRotations(.12, yAxis, zAxis));\n      }\n    }\n  };\n\n  // allows for scroll to zoom in or out\n  const handleWheel = e => {\n    const {\n      deltaY\n    } = e;\n    const newScale = deltaY > 0 ? scale - 0.075 * Math.abs(deltaY) : scale + 0.075 * Math.abs(deltaY);\n    if (newScale < 30) {} else if (newScale > 140) {} else {\n      setScale(newScale);\n    }\n  };\n\n  // function to unitize a vector\n  const unitizeVector = v => {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    const magnitude = Math.sqrt(x ** 2 + y ** 2 + z ** 2);\n    const unitizedVector = [x / magnitude, y / magnitude, z / magnitude];\n    return unitizedVector;\n  };\n\n  // create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n    const R = [[cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin], [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin], [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos]];\n    return R;\n  };\n\n  // point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [axis[1][0] - axis[0][0], axis[1][1] - axis[0][1], axis[1][2] - axis[0][2]];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n    return points.map(point => {\n      const rotated = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          rotated[i] += R[i][j] * point[j];\n        }\n      }\n      return rotated;\n    });\n  };\n\n  // starts coordinate capture on mouse down\n  const handleMouseDown = e => {\n    console.log(\"Mouse down: \", e.clientX, e.clientY);\n    setDragging(true);\n  };\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n  let animationFrame = null;\n  const handleMouseMove = e => {\n    if (!dragging) return;\n    if (animationFrame) cancelAnimationFrame(animationFrame);\n    animationFrame = requestAnimationFrame(() => {\n      const newCoords = [e.clientX, e.clientY];\n      const coordDiff = [\n      // safeCoordDiff(newCoords[0] - currentCoords[0], 0.75), // Horizontal movement\n      // safeCoordDiff(newCoords[1] - currentCoords[1], 0.75), // Vertical movement\n      newCoords[0] - currentCoords[0], newCoords[1] - currentCoords[1]];\n      if (Math.abs(coordDiff[1]) > 2 && Math.abs(coordDiff[0]) <= 2) {\n        // Handle vertical movement\n        const rotationX = coordDiff[1] / 500;\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n        const updatedPoints = handleRotations(rotationX, points, theAxis);\n        const updatedXAxis = handleRotations(rotationX, xAxis, theAxis);\n        const updatedYAxis = handleRotations(rotationX, yAxis, theAxis);\n        const updatedZAxis = handleRotations(rotationX, zAxis, theAxis);\n        setPoints(updatedPoints);\n        setXAxis(updatedXAxis);\n        setYAxis(updatedYAxis);\n        setZAxis(updatedZAxis);\n        rotateBorders(rotationX, 0, theAxis, zAxis);\n      } else if (Math.abs(coordDiff[0]) > 2 && Math.abs(coordDiff[1]) <= 2) {\n        // Handle horizontal movement\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n        const updatedPoints = handleRotations(-rotationZ, points, zAxis);\n        const updatedXAxis = handleRotations(-rotationZ, xAxis, zAxis);\n        const updatedYAxis = handleRotations(-rotationZ, yAxis, zAxis);\n        setPoints(updatedPoints);\n        setXAxis(updatedXAxis);\n        setYAxis(updatedYAxis);\n        rotateBorders(0, -rotationZ, theAxis, zAxis);\n      } else {\n        // Handle combined movement\n        const rotationX = coordDiff[1] / 500;\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n        const updatedPointsX = handleRotations(rotationX, points, theAxis);\n        const updatedPointsXZ = handleRotations(-rotationZ, updatedPointsX, zAxis);\n        const updatedXAxisX = handleRotations(rotationX, xAxis, theAxis);\n        const updatedXAxisXZ = handleRotations(-rotationZ, updatedXAxisX, zAxis);\n        const updatedYAxisX = handleRotations(rotationX, yAxis, theAxis);\n        const updatedYAxisXZ = handleRotations(-rotationZ, updatedYAxisX, zAxis);\n        const updatedZAxis = handleRotations(rotationX, zAxis, theAxis);\n        setPoints(updatedPointsXZ);\n        setXAxis(updatedXAxisXZ);\n        setYAxis(updatedYAxisXZ);\n        setZAxis(updatedZAxis);\n        rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n      }\n\n      // Update current coordinates\n      setCurrentCoords(newCoords);\n    });\n  };\n  const handleMouseUp = e => {\n    console.log(\"Mouse up: \", e.clientX, e.clientY);\n    setDragging(false);\n  };\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n    if (denominator <= 0.2) {\n      return 0;\n    }\n    return 1.5 * (1 / denominator);\n  };\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [x * scale * cameraPos / (z * scale + cameraPos) + width / 2, -y * scale * cameraPos / (z * scale + cameraPos) + height / 2];\n  };\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const posXRotation = handleRotations(theta1, posXBorder, axis1);\n    const negXRotation = handleRotations(theta1, negXBorder, axis1);\n    const posYRotation = handleRotations(theta1, posYBorder, axis1);\n    const negYRotation = handleRotations(theta1, negYBorder, axis1);\n    setPosXBorder(handleRotations(theta2, posXRotation, axis2));\n    setNegXBorder(handleRotations(theta2, negXRotation, axis2));\n    setPosYBorder(handleRotations(theta2, posYRotation, axis2));\n    setNegYBorder(handleRotations(theta2, negYRotation, axis2));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    options: {\n      passive: false\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onWheel: handleWheel,\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [x, y, z] = point;\n          const cameraPos = 500;\n          const [projectedX, projectedY] = projectPoint([x, y, z]);\n          const radius = safeRadius(z, scale, cameraPos);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [lineStart, lineEnd] = axis;\n          const [x1, y1] = projectPoint(lineStart);\n          const [x2, y2] = projectPoint(lineEnd);\n          const axes = [\"X\", \"Y\", \"Z\"];\n          const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: colours[index],\n              strokeWidth: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x1 - 5,\n              y: y1 - 2,\n              fontSize: scale / 2.5,\n              fill: \"#333333\",\n              fontWeight: \"bold\",\n              style: {\n                userSelect: \"none\"\n              },\n              children: axes[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(posXBorder[0])[0],\n          y1: projectPoint(posXBorder[0])[1],\n          x2: projectPoint(posXBorder[1])[0],\n          y2: projectPoint(posXBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(negXBorder[0])[0],\n          y1: projectPoint(negXBorder[0])[1],\n          x2: projectPoint(negXBorder[1])[0],\n          y2: projectPoint(negXBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(posYBorder[0])[0],\n          y1: projectPoint(posYBorder[0])[1],\n          x2: projectPoint(posYBorder[1])[0],\n          y2: projectPoint(posYBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: projectPoint(negYBorder[0])[0],\n          y1: projectPoint(negYBorder[0])[1],\n          x2: projectPoint(negYBorder[1])[0],\n          y2: projectPoint(negYBorder[1])[1],\n          stroke: \"#D6D6D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"HNfR1hUJ+gU/jhXw8kafptdUBPY=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","debounce","throttle","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","posXBorder","setPosXBorder","negXBorder","setNegXBorder","posYBorder","setPosYBorder","negYBorder","setNegYBorder","dragging","setDragging","currentCoords","setCurrentCoords","width","height","get","then","response","data","catch","console","handleClick","e","length","typeOfRot","target","value","handleRotations","handleWheel","deltaY","newScale","Math","abs","unitizeVector","v","x","y","z","magnitude","sqrt","unitizedVector","createRotationMatrix","ux","uy","uz","theta","cos","sin","oneMinusCos","R","axis","directionVector","map","point","rotated","i","j","handleMouseDown","log","clientX","clientY","safeCoordDiff","minValue","animationFrame","handleMouseMove","cancelAnimationFrame","requestAnimationFrame","newCoords","coordDiff","rotationX","theAxis","updatedPoints","updatedXAxis","updatedYAxis","updatedZAxis","rotateBorders","rotationZ","min","max","updatedPointsX","updatedPointsXZ","updatedXAxisX","updatedXAxisXZ","updatedYAxisX","updatedYAxisXZ","handleMouseUp","safeRadius","cameraPos","denominator","projectPoint","theta1","theta2","axis1","axis2","posXRotation","negXRotation","posYRotation","negYRotation","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","options","passive","id","onMouseDown","onMouseMove","onMouseUp","onWheel","border","projectedX","projectedY","radius","cx","cy","r","fill","index","lineStart","lineEnd","x1","y1","x2","y2","axes","colours","stroke","strokeWidth","fontSize","fontWeight","userSelect","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { debounce, throttle } from 'lodash'\n\nconst VisualizationContainer = () => {\n  // general variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // function display variables\n  const [scale, setScale] = useState(100);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // xy border lines\n  const [posXBorder, setPosXBorder] = useState([[3.5, 3.5, 0], [3.5, -3.5, 0]])\n  const [negXBorder, setNegXBorder] = useState([[-3.5, 3.5, 0], [-3.5, -3.5, 0]])\n  const [posYBorder, setPosYBorder] = useState([[3.5, 3.5, 0], [-3.5, 3.5, 0]])\n  const [negYBorder, setNegYBorder] = useState([[3.5, -3.5, 0], [-3.5, -3.5, 0]])\n  // future xy border improvement\n  // const xyBorder = [[3.5, 3.5, 0], [3.5, -3.5, 0], [-3.5, 3.5, 0], [-3.5, -3.5, 0], [3.5, 3.5, 0], [-3.5, 3.5, 0], [3.5, -3.5, 0], [-3.5, -3.5, 0]]\n\n  // containing cube\n  // const \n\n\n  // function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0])\n\n  const width = 1000;\n  const height = 1000;\n\n\n  // retrieve the calculated points from the backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // soon to be deprecated handles rotations manually with button clicks\n  const handleClick = (e) => {\n    if (points.length > 0) {\n      const typeOfRot = e.target.value\n      if (typeOfRot === \"x\") {\n        setPoints(handleRotations(.12, points, xAxis))\n        setYAxis(handleRotations(.12, yAxis, xAxis))\n        setZAxis(handleRotations(.12, zAxis, xAxis))\n      }\n      else if (typeOfRot === \"y\") {\n        setPoints(handleRotations(.12, points, yAxis))\n        setXAxis(handleRotations(.12, xAxis, yAxis))\n        setZAxis(handleRotations(.12, zAxis, yAxis))\n      }\n      else {\n        setPoints(handleRotations(.12, points, zAxis))\n        setXAxis(handleRotations(.12, xAxis, zAxis))\n        setYAxis(handleRotations(.12, yAxis, zAxis))\n      }\n    }\n  };\n\n  // allows for scroll to zoom in or out\n  const handleWheel = (e) => {\n    const { deltaY } = e;\n    const newScale = \n      deltaY > 0 \n        ? scale - (0.075 * Math.abs(deltaY))\n        : scale + (0.075 * Math.abs(deltaY));\n\n    if (newScale < 30) {\n    }\n    else if (newScale > 140) {\n    }\n    else {\n      setScale(newScale);\n    }\n  }\n\n  // function to unitize a vector\n  const unitizeVector = (v) => {\n    const x = v[0]\n    const y = v[1]\n    const z = v[2]\n\n    const magnitude = Math.sqrt(x**2 + y**2 + z**2)\n\n    const unitizedVector = [x / magnitude, y / magnitude, z / magnitude]\n\n    return unitizedVector\n  }\n\n  // create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta)\n    const sin = Math.sin(theta)\n    const oneMinusCos = 1 - cos\n\n    const R = [\n      [cos + (ux**2 * oneMinusCos), ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin],\n      [uy * ux * oneMinusCos + uz * sin, cos + uy**2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin],\n      [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz**2 * oneMinusCos]\n    ]\n\n    return R\n  }\n\n  // point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [\n      axis[1][0] - axis[0][0],\n      axis[1][1] - axis[0][1],\n      axis[1][2] - axis[0][2],\n    ];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    \n    const R = createRotationMatrix(ux, uy, uz, theta);\n\n    return points.map(point => {\n      const rotated = [0, 0, 0];\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          rotated[i] += R[i][j] * point[j];\n        }\n      }\n      return rotated;\n    });\n  };\n  \n\n  // starts coordinate capture on mouse down\n  const handleMouseDown =  (e) => {\n    console.log(\"Mouse down: \", e.clientX, e.clientY);\n    setDragging(true)\n  }\n\n  // Safeguard to prevent division by zero or small values\n  const safeCoordDiff = (value, minValue) => Math.abs(value) < minValue ? minValue : value;\n\n  let animationFrame = null;\n\n  const handleMouseMove = (e) => {\n    if (!dragging) return;\n  \n    if (animationFrame) cancelAnimationFrame(animationFrame);\n  \n    animationFrame = requestAnimationFrame(() => {\n      const newCoords = [e.clientX, e.clientY];\n      const coordDiff = [\n        // safeCoordDiff(newCoords[0] - currentCoords[0], 0.75), // Horizontal movement\n        // safeCoordDiff(newCoords[1] - currentCoords[1], 0.75), // Vertical movement\n        newCoords[0] - currentCoords[0],\n        newCoords[1] - currentCoords[1]\n      ];\n  \n      if (Math.abs(coordDiff[1]) > 2 && Math.abs(coordDiff[0]) <= 2) {\n        // Handle vertical movement\n        const rotationX = coordDiff[1] / 500\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n  \n        const updatedPoints = handleRotations(rotationX, points, theAxis);\n        const updatedXAxis = handleRotations(rotationX, xAxis, theAxis);\n        const updatedYAxis = handleRotations(rotationX, yAxis, theAxis);\n        const updatedZAxis = handleRotations(rotationX, zAxis, theAxis);\n  \n        setPoints(updatedPoints);\n        setXAxis(updatedXAxis);\n        setYAxis(updatedYAxis);\n        setZAxis(updatedZAxis);\n  \n        rotateBorders(rotationX, 0, theAxis, zAxis);\n      } else if (Math.abs(coordDiff[0]) > 2 && Math.abs(coordDiff[1]) <= 2) {\n        // Handle horizontal movement\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n  \n        const updatedPoints = handleRotations(-rotationZ, points, zAxis);\n        const updatedXAxis = handleRotations(-rotationZ, xAxis, zAxis);\n        const updatedYAxis = handleRotations(-rotationZ, yAxis, zAxis);\n  \n        setPoints(updatedPoints);\n        setXAxis(updatedXAxis);\n        setYAxis(updatedYAxis);\n  \n        rotateBorders(0, -rotationZ, theAxis, zAxis);\n      } else {\n        // Handle combined movement\n        const rotationX = coordDiff[1] / 500\n        const rotationZ = Math.min(0.02, Math.max(-0.02, coordDiff[0] * 0.001));\n        const theAxis = [[1, 0, 0], [-1, 0, 0]];\n  \n        const updatedPointsX = handleRotations(rotationX, points, theAxis);\n        const updatedPointsXZ = handleRotations(-rotationZ, updatedPointsX, zAxis);\n  \n        const updatedXAxisX = handleRotations(rotationX, xAxis, theAxis);\n        const updatedXAxisXZ = handleRotations(-rotationZ, updatedXAxisX, zAxis);\n  \n        const updatedYAxisX = handleRotations(rotationX, yAxis, theAxis);\n        const updatedYAxisXZ = handleRotations(-rotationZ, updatedYAxisX, zAxis);\n  \n        const updatedZAxis = handleRotations(rotationX, zAxis, theAxis);\n  \n        setPoints(updatedPointsXZ);\n        setXAxis(updatedXAxisXZ);\n        setYAxis(updatedYAxisXZ);\n        setZAxis(updatedZAxis);\n  \n        rotateBorders(rotationX, -rotationZ, theAxis, zAxis);\n      }\n  \n      // Update current coordinates\n      setCurrentCoords(newCoords);\n    });\n  };  \n\n  const handleMouseUp = (e) => {\n    console.log(\"Mouse up: \", e.clientX, e.clientY);\n    setDragging(false)\n  } \n\n  const safeRadius = (z, scale, cameraPos) => {\n    const denominator = 1 + z * scale / cameraPos;\n  \n    if (denominator <= 0.2) {\n      return 0;\n    }\n  \n    return 1.5 * (1 / denominator);\n  };\n\n  const projectPoint = ([x, y, z], cameraPos = 1000) => {\n    return [\n      (x * scale * cameraPos) / (z * scale + cameraPos) + width / 2,\n      (-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2,\n    ];\n  };\n\n  const rotateBorders = (theta1, theta2, axis1, axis2) => {\n    const posXRotation = handleRotations(theta1, posXBorder, axis1);\n    const negXRotation = handleRotations(theta1, negXBorder, axis1);\n    const posYRotation = handleRotations(theta1, posYBorder, axis1);\n    const negYRotation = handleRotations(theta1, negYBorder, axis1);\n\n    setPosXBorder(handleRotations(theta2, posXRotation, axis2));\n    setNegXBorder(handleRotations(theta2, negXRotation, axis2));\n    setPosYBorder(handleRotations(theta2, posYRotation, axis2));\n    setNegYBorder(handleRotations(theta2, negYRotation, axis2));\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{overflow: 'hidden'}} options={{ passive: false }}>\n      <h1>Visualization</h1>\n      <div id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg\n          onWheel={handleWheel}\n          width={width}\n          height={height}\n          style={{ border: '1px solid black' }}\n        >\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const cameraPos = 500\n            \n            const [projectedX, projectedY] = projectPoint([x, y, z])\n\n            const radius = safeRadius(z, scale, cameraPos);\n\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={radius}\n                fill={colour}\n              />\n            );\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [lineStart, lineEnd] = axis;\n            const [x1, y1] = projectPoint(lineStart);\n            const [x2, y2] = projectPoint(lineEnd);\n            const axes = [\"X\", \"Y\", \"Z\"]\n            const colours = [\"#5A8AA8\", \"#9CA9B3\", \"#88BDBC\"]\n\n            return (\n              <g key={index}>\n                <line\n                  x1={x1}\n                  y1={y1}\n                  x2={x2}\n                  y2={y2}\n                  stroke={colours[index]}\n                  strokeWidth={3}\n                />\n                <text x={x1 - 5} y={y1 - 2} fontSize={scale / 2.5} fill=\"#333333\" fontWeight=\"bold\" style={{ userSelect: \"none\" }}>{axes[index]}</text>\n              </g>\n            )\n          })}\n          <line\n            x1={projectPoint(posXBorder[0])[0]}\n            y1={projectPoint(posXBorder[0])[1]}\n            x2={projectPoint(posXBorder[1])[0]}\n            y2={projectPoint(posXBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n          <line\n            x1={projectPoint(negXBorder[0])[0]}\n            y1={projectPoint(negXBorder[0])[1]}\n            x2={projectPoint(negXBorder[1])[0]}\n            y2={projectPoint(negXBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n          <line\n            x1={projectPoint(posYBorder[0])[0]}\n            y1={projectPoint(posYBorder[0])[1]}\n            x2={projectPoint(posYBorder[1])[0]}\n            y2={projectPoint(posYBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n          <line\n            x1={projectPoint(negYBorder[0])[0]}\n            y1={projectPoint(negYBorder[0])[1]}\n            x2={projectPoint(negYBorder[1])[0]}\n            y2={projectPoint(negYBorder[1])[1]}\n            stroke='#D6D6D6'\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}