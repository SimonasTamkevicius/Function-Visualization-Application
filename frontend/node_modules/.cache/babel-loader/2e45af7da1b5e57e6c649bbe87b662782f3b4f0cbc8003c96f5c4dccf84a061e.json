{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(30);\n  const width = 500;\n  const height = 500;\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n  const handleXClick = () => {\n    if (points.length > 0) {\n      axios.post('http://localhost:8000/rotate_points', {\n        type: 'x',\n        newPoints: points\n      }).then(response => {\n        if (response.status === 200) {\n          setPoints(response.data.rotatedPoints);\n        } else {\n          throw new Error('Failed to rotate points!');\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  const handleClick = e => {\n    const {\n      clientX,\n      clientY\n    } = e;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        onClick: handleClick(e),\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: points.map((point, i) => {\n          const [x, y, z] = point;\n          const perspective = 500;\n          const projectedX = x * scale / (1 + z * scale / perspective) + width / 2;\n          const projectedY = -y * scale / (1 + z * scale / perspective) + height / 2;\n          const radius = 1.5 * (1 / (1 + z * scale / perspective));\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: radius,\n            fill: \"blue\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleXClick,\n      children: \"Rotate X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is filler text this is filler text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"nctPFzGPAdJuAGSLfOhGgpFBswU=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","points","setPoints","loading","setLoading","error","setError","scale","setScale","width","height","get","then","response","data","catch","console","handleXClick","length","post","type","newPoints","status","rotatedPoints","Error","handleClick","e","clientX","clientY","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","border","map","point","i","x","y","z","perspective","projectedX","projectedY","radius","cx","cy","r","fill","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/frontend/cartesian-frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  const [points, setPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [scale, setScale] = useState(30);\n\n  const width = 500;\n  const height = 500;\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  const handleXClick = () => {\n    if (points.length > 0) {\n      axios\n        .post('http://localhost:8000/rotate_points', {\n          type: 'x',\n          newPoints: points,\n        })\n        .then((response) => {\n          if (response.status === 200) {\n            setPoints(response.data.rotatedPoints);\n          } else {\n            throw new Error('Failed to rotate points!');\n          }\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n        });\n    }\n  };\n\n  const handleClick = (e) => {\n    const { clientX, clientY } = e\n\n    \n  }\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h1>Visualization</h1>\n      <div>\n        <svg onClick={handleClick(e)} width={width} height={height} style={{ border: '1px solid black' }}>\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const perspective = 500;\n\n            const projectedX =\n              (x * scale) / (1 + z * scale / perspective) + width / 2;\n            const projectedY =\n              (-y * scale) / (1 + z * scale / perspective) + height / 2;\n\n            const radius = 1.5 * (1 / (1 + z * scale / perspective));\n\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={radius}\n                fill=\"blue\"\n              />\n            );\n          })}\n        </svg>\n      </div>\n      <button onClick={handleXClick}>Rotate X</button>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n      <p>this is filler text this is filler text</p>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}