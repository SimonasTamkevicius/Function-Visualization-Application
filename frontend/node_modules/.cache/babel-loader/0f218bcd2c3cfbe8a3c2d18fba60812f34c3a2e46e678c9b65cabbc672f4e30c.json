{"ast":null,"code":"var _jsxFileName = \"/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = () => {\n  _s();\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // Cube related variables\n  const [cubeCorners, setCubeCorners] = useState([[3.5, 3.5, 3.5], [-3.5, 3.5, 3.5], [-3.5, -3.5, 3.5], [3.5, -3.5, 3.5], [3.5, 3.5, -3.5], [-3.5, 3.5, -3.5], [-3.5, -3.5, -3.5], [3.5, -3.5, -3.5]]);\n  const cubeEdges = [[0, 1], [1, 2], [2, 3], [3, 0],\n  // Front face\n  [4, 5], [5, 6], [6, 7], [7, 4],\n  // Back face\n  [0, 4], [1, 5], [2, 6], [3, 7] // Connecting edges\n  ];\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n  const width = 500;\n  const height = 500;\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios.get('http://localhost:8000/points').then(response => {\n      setPoints(response.data.points);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching points:', error);\n      setError('Failed to fetch points');\n      setLoading(false);\n    });\n  }, []);\n\n  // Function to unitize a vector\n  const unitizeVector = v => {\n    const magnitude = Math.sqrt(v[0] ** 2 + v[1] ** 2 + v[2] ** 2);\n    return v.map(coord => coord / magnitude);\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n    return [[cos + ux ** 2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin], [uy * ux * oneMinusCos + uz * sin, cos + uy ** 2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin], [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz ** 2 * oneMinusCos]];\n  };\n\n  // Point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [axis[1][0] - axis[0][0], axis[1][1] - axis[0][1], axis[1][2] - axis[0][2]];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n    return points.map(point => {\n      return [R[0][0] * point[0] + R[0][1] * point[1] + R[0][2] * point[2], R[1][0] * point[0] + R[1][1] * point[1] + R[1][2] * point[2], R[2][0] * point[0] + R[2][1] * point[1] + R[2][2] * point[2]];\n    });\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      const coordDiff = [e.clientX - currentCoords[0], e.clientY - currentCoords[1]];\n      const rotationX = coordDiff[1] * 0.001;\n      const rotationZ = -coordDiff[0] * 0.001;\n      setPoints(handleRotations(rotationX, points, xAxis));\n      setPoints(handleRotations(rotationZ, points, zAxis));\n      setXAxis(handleRotations(rotationX, xAxis, xAxis));\n      setXAxis(handleRotations(rotationZ, xAxis, zAxis));\n      setYAxis(handleRotations(rotationX, yAxis, xAxis));\n      setYAxis(handleRotations(rotationZ, yAxis, zAxis));\n      setZAxis(handleRotations(rotationX, zAxis, xAxis));\n      setZAxis(handleRotations(rotationZ, zAxis, zAxis));\n      setCubeCorners(handleRotations(rotationX, cubeCorners, xAxis));\n      setCubeCorners(handleRotations(rotationZ, cubeCorners, zAxis));\n      setCurrentCoords([e.clientX, e.clientY]);\n    }\n  };\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const projectPoint = ([x, y, z], cameraPos = 500) => {\n    return [x * scale * cameraPos / (z * scale + cameraPos) + width / 2, -y * scale * cameraPos / (z * scale + cameraPos) + height / 2];\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg-wrapper\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        style: {\n          border: '1px solid black'\n        },\n        children: [points.map((point, i) => {\n          const [x, y, z] = point;\n          const [projectedX, projectedY] = projectPoint([x, y, z]);\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: projectedX,\n            cy: projectedY,\n            r: 2,\n            fill: colour\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this);\n        }), [xAxis, yAxis, zAxis].map((axis, index) => {\n          const [start, end] = axis;\n          const [x1, y1] = projectPoint(start);\n          const [x2, y2] = projectPoint(end);\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            stroke: \"black\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this);\n        }), cubeEdges.map(([start, end], index) => {\n          const [x1, y1] = projectPoint(cubeCorners[start]);\n          const [x2, y2] = projectPoint(cubeCorners[end]);\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            stroke: \"gray\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(VisualizationContainer, \"qMaINP14z9qK1aXIlZKule8+9vI=\");\n_c = VisualizationContainer;\nexport default VisualizationContainer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationContainer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","VisualizationContainer","_s","loading","setLoading","error","setError","scale","setScale","points","setPoints","colour","setColour","xAxis","setXAxis","yAxis","setYAxis","zAxis","setZAxis","cubeCorners","setCubeCorners","cubeEdges","dragging","setDragging","currentCoords","setCurrentCoords","width","height","get","then","response","data","catch","console","unitizeVector","v","magnitude","Math","sqrt","map","coord","createRotationMatrix","ux","uy","uz","theta","cos","sin","oneMinusCos","handleRotations","axis","directionVector","R","point","handleMouseDown","e","clientX","clientY","handleMouseMove","coordDiff","rotationX","rotationZ","handleMouseUp","projectPoint","x","y","z","cameraPos","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","id","onMouseDown","onMouseMove","onMouseUp","border","i","projectedX","projectedY","cx","cy","r","fill","index","start","end","x1","y1","x2","y2","stroke","_c","$RefreshReg$"],"sources":["/Users/simonastamkevicius/Desktop/Python Function Visualization/Backup/Function-Visualization-Application/frontend/src/components/VisualizationContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst VisualizationContainer = () => {\n  // General variables\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function display variables\n  const [scale, setScale] = useState(60);\n  const [points, setPoints] = useState([]);\n  const [colour, setColour] = useState(\"#002fa7\");\n\n  // Axes related variables\n  const [xAxis, setXAxis] = useState([[3.5, 0, 0], [-3.5, 0, 0]]);\n  const [yAxis, setYAxis] = useState([[0, 3.5, 0], [0, -3.5, 0]]);\n  const [zAxis, setZAxis] = useState([[0, 0, 3.5], [0, 0, -3.5]]);\n\n  // Cube related variables\n  const [cubeCorners, setCubeCorners] = useState([\n    [3.5, 3.5, 3.5],\n    [-3.5, 3.5, 3.5],\n    [-3.5, -3.5, 3.5],\n    [3.5, -3.5, 3.5],\n    [3.5, 3.5, -3.5],\n    [-3.5, 3.5, -3.5],\n    [-3.5, -3.5, -3.5],\n    [3.5, -3.5, -3.5],\n  ]);\n\n  const cubeEdges = [\n    [0, 1], [1, 2], [2, 3], [3, 0], // Front face\n    [4, 5], [5, 6], [6, 7], [7, 4], // Back face\n    [0, 4], [1, 5], [2, 6], [3, 7], // Connecting edges\n  ];\n\n  // Function rotation\n  const [dragging, setDragging] = useState(false);\n  const [currentCoords, setCurrentCoords] = useState([0, 0]);\n\n  const width = 500;\n  const height = 500;\n\n  // Retrieve the calculated points from the backend\n  useEffect(() => {\n    axios\n      .get('http://localhost:8000/points')\n      .then((response) => {\n        setPoints(response.data.points);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching points:', error);\n        setError('Failed to fetch points');\n        setLoading(false);\n      });\n  }, []);\n\n  // Function to unitize a vector\n  const unitizeVector = (v) => {\n    const magnitude = Math.sqrt(v[0]**2 + v[1]**2 + v[2]**2);\n    return v.map(coord => coord / magnitude);\n  };\n\n  // Create the Rodrigues rotation matrix\n  const createRotationMatrix = (ux, uy, uz, theta) => {\n    const cos = Math.cos(theta);\n    const sin = Math.sin(theta);\n    const oneMinusCos = 1 - cos;\n\n    return [\n      [cos + ux**2 * oneMinusCos, ux * uy * oneMinusCos - uz * sin, ux * uz * oneMinusCos + uy * sin],\n      [uy * ux * oneMinusCos + uz * sin, cos + uy**2 * oneMinusCos, uy * uz * oneMinusCos - ux * sin],\n      [uz * ux * oneMinusCos - uy * sin, uz * uy * oneMinusCos + ux * sin, cos + uz**2 * oneMinusCos]\n    ];\n  };\n\n  // Point rotation calculations in the frontend\n  const handleRotations = (theta, points, axis) => {\n    const directionVector = [\n      axis[1][0] - axis[0][0],\n      axis[1][1] - axis[0][1],\n      axis[1][2] - axis[0][2],\n    ];\n    const [ux, uy, uz] = unitizeVector(directionVector);\n    const R = createRotationMatrix(ux, uy, uz, theta);\n\n    return points.map(point => {\n      return [\n        R[0][0] * point[0] + R[0][1] * point[1] + R[0][2] * point[2],\n        R[1][0] * point[0] + R[1][1] * point[1] + R[1][2] * point[2],\n        R[2][0] * point[0] + R[2][1] * point[1] + R[2][2] * point[2],\n      ];\n    });\n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    setCurrentCoords([e.clientX, e.clientY]);\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      const coordDiff = [\n        e.clientX - currentCoords[0],\n        e.clientY - currentCoords[1],\n      ];\n\n      const rotationX = coordDiff[1] * 0.001;\n      const rotationZ = -coordDiff[0] * 0.001;\n\n      setPoints(handleRotations(rotationX, points, xAxis));\n      setPoints(handleRotations(rotationZ, points, zAxis));\n\n      setXAxis(handleRotations(rotationX, xAxis, xAxis));\n      setXAxis(handleRotations(rotationZ, xAxis, zAxis));\n\n      setYAxis(handleRotations(rotationX, yAxis, xAxis));\n      setYAxis(handleRotations(rotationZ, yAxis, zAxis));\n\n      setZAxis(handleRotations(rotationX, zAxis, xAxis));\n      setZAxis(handleRotations(rotationZ, zAxis, zAxis));\n\n      setCubeCorners(handleRotations(rotationX, cubeCorners, xAxis));\n      setCubeCorners(handleRotations(rotationZ, cubeCorners, zAxis));\n\n      setCurrentCoords([e.clientX, e.clientY]);\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const projectPoint = ([x, y, z], cameraPos = 500) => {\n    return [\n      (x * scale * cameraPos) / (z * scale + cameraPos) + width / 2,\n      (-y * scale * cameraPos) / (z * scale + cameraPos) + height / 2,\n    ];\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div style={{ overflow: 'hidden' }}>\n      <h1>Visualization</h1>\n      <div id=\"svg-wrapper\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <svg\n          width={width}\n          height={height}\n          style={{ border: '1px solid black' }}\n        >\n          {points.map((point, i) => {\n            const [x, y, z] = point;\n            const [projectedX, projectedY] = projectPoint([x, y, z]);\n            return (\n              <circle\n                key={i}\n                cx={projectedX}\n                cy={projectedY}\n                r={2}\n                fill={colour}\n              />\n            );\n          })}\n          {[xAxis, yAxis, zAxis].map((axis, index) => {\n            const [start, end] = axis;\n            const [x1, y1] = projectPoint(start);\n            const [x2, y2] = projectPoint(end);\n            return (\n              <line\n                key={index}\n                x1={x1}\n                y1={y1}\n                x2={x2}\n                y2={y2}\n                stroke=\"black\"\n              />\n            );\n          })}\n          {cubeEdges.map(([start, end], index) => {\n            const [x1, y1] = projectPoint(cubeCorners[start]);\n            const [x2, y2] = projectPoint(cubeCorners[end]);\n            return (\n              <line\n                key={index}\n                x1={x1}\n                y1={y1}\n                x2={x2}\n                y2={y2}\n                stroke=\"gray\"\n              />\n            );\n          })}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}